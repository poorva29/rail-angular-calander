#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiraiConsultMVC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AsquareMirai")]
	public partial class _dbAskMiraiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertanswer(answer instance);
    partial void Updateanswer(answer instance);
    partial void Deleteanswer(answer instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertappointment(appointment instance);
    partial void Updateappointment(appointment instance);
    partial void Deleteappointment(appointment instance);
    partial void Insertappointmenttype(appointmenttype instance);
    partial void Updateappointmenttype(appointmenttype instance);
    partial void Deleteappointmenttype(appointmenttype instance);
    partial void Insertcity(city instance);
    partial void Updatecity(city instance);
    partial void Deletecity(city instance);
    partial void Insertconfig(config instance);
    partial void Updateconfig(config instance);
    partial void Deleteconfig(config instance);
    partial void Insertcountry(country instance);
    partial void Updatecountry(country instance);
    partial void Deletecountry(country instance);
    partial void Insertdegree(degree instance);
    partial void Updatedegree(degree instance);
    partial void Deletedegree(degree instance);
    partial void Insertdelayedappointmentsrecord(delayedappointmentsrecord instance);
    partial void Updatedelayedappointmentsrecord(delayedappointmentsrecord instance);
    partial void Deletedelayedappointmentsrecord(delayedappointmentsrecord instance);
    partial void Insertdoctoragree(doctoragree instance);
    partial void Updatedoctoragree(doctoragree instance);
    partial void Deletedoctoragree(doctoragree instance);
    partial void Insertdoctorlocation(doctorlocation instance);
    partial void Updatedoctorlocation(doctorlocation instance);
    partial void Deletedoctorlocation(doctorlocation instance);
    partial void Insertdoctorlocationworkinghour(doctorlocationworkinghour instance);
    partial void Updatedoctorlocationworkinghour(doctorlocationworkinghour instance);
    partial void Deletedoctorlocationworkinghour(doctorlocationworkinghour instance);
    partial void Insertdoctorquestion(doctorquestion instance);
    partial void Updatedoctorquestion(doctorquestion instance);
    partial void Deletedoctorquestion(doctorquestion instance);
    partial void Insertdoctorsdetail(doctorsdetail instance);
    partial void Updatedoctorsdetail(doctorsdetail instance);
    partial void Deletedoctorsdetail(doctorsdetail instance);
    partial void Insertdoctorspeciality(doctorspeciality instance);
    partial void Updatedoctorspeciality(doctorspeciality instance);
    partial void Deletedoctorspeciality(doctorspeciality instance);
    partial void Inserthealthinformation(healthinformation instance);
    partial void Updatehealthinformation(healthinformation instance);
    partial void Deletehealthinformation(healthinformation instance);
    partial void Inserthospital(hospital instance);
    partial void Updatehospital(hospital instance);
    partial void Deletehospital(hospital instance);
    partial void Inserthospital_admin(hospital_admin instance);
    partial void Updatehospital_admin(hospital_admin instance);
    partial void Deletehospital_admin(hospital_admin instance);
    partial void Insertlocation(location instance);
    partial void Updatelocation(location instance);
    partial void Deletelocation(location instance);
    partial void Insertpatientthank(patientthank instance);
    partial void Updatepatientthank(patientthank instance);
    partial void Deletepatientthank(patientthank instance);
    partial void Insertquestion(question instance);
    partial void Updatequestion(question instance);
    partial void Deletequestion(question instance);
    partial void Insertquestiontag(questiontag instance);
    partial void Updatequestiontag(questiontag instance);
    partial void Deletequestiontag(questiontag instance);
    partial void Insertregistrationcouncil(registrationcouncil instance);
    partial void Updateregistrationcouncil(registrationcouncil instance);
    partial void Deleteregistrationcouncil(registrationcouncil instance);
    partial void Insertspeciality(speciality instance);
    partial void Updatespeciality(speciality instance);
    partial void Deletespeciality(speciality instance);
    partial void Insertstate(state instance);
    partial void Updatestate(state instance);
    partial void Deletestate(state instance);
    partial void Inserttag(tag instance);
    partial void Updatetag(tag instance);
    partial void Deletetag(tag instance);
    partial void Insertunregpatient(unregpatient instance);
    partial void Updateunregpatient(unregpatient instance);
    partial void Deleteunregpatient(unregpatient instance);
    #endregion
		
		public _dbAskMiraiDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AsquareMiraiConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public _dbAskMiraiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public _dbAskMiraiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public _dbAskMiraiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public _dbAskMiraiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<answer> answers
		{
			get
			{
				return this.GetTable<answer>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<appointment> appointments
		{
			get
			{
				return this.GetTable<appointment>();
			}
		}
		
		public System.Data.Linq.Table<appointmenttype> appointmenttypes
		{
			get
			{
				return this.GetTable<appointmenttype>();
			}
		}
		
		public System.Data.Linq.Table<city> cities
		{
			get
			{
				return this.GetTable<city>();
			}
		}
		
		public System.Data.Linq.Table<config> configs
		{
			get
			{
				return this.GetTable<config>();
			}
		}
		
		public System.Data.Linq.Table<country> countries
		{
			get
			{
				return this.GetTable<country>();
			}
		}
		
		public System.Data.Linq.Table<degree> degrees
		{
			get
			{
				return this.GetTable<degree>();
			}
		}
		
		public System.Data.Linq.Table<delayedappointmentsrecord> delayedappointmentsrecords
		{
			get
			{
				return this.GetTable<delayedappointmentsrecord>();
			}
		}
		
		public System.Data.Linq.Table<doctoragree> doctoragrees
		{
			get
			{
				return this.GetTable<doctoragree>();
			}
		}
		
		public System.Data.Linq.Table<doctorlocation> doctorlocations
		{
			get
			{
				return this.GetTable<doctorlocation>();
			}
		}
		
		public System.Data.Linq.Table<doctorlocationworkinghour> doctorlocationworkinghours
		{
			get
			{
				return this.GetTable<doctorlocationworkinghour>();
			}
		}
		
		public System.Data.Linq.Table<doctorqualification> doctorqualifications
		{
			get
			{
				return this.GetTable<doctorqualification>();
			}
		}
		
		public System.Data.Linq.Table<doctorquestion> doctorquestions
		{
			get
			{
				return this.GetTable<doctorquestion>();
			}
		}
		
		public System.Data.Linq.Table<doctorsdetail> doctorsdetails
		{
			get
			{
				return this.GetTable<doctorsdetail>();
			}
		}
		
		public System.Data.Linq.Table<doctorspeciality> doctorspecialities
		{
			get
			{
				return this.GetTable<doctorspeciality>();
			}
		}
		
		public System.Data.Linq.Table<healthinformation> healthinformations
		{
			get
			{
				return this.GetTable<healthinformation>();
			}
		}
		
		public System.Data.Linq.Table<hospital> hospitals
		{
			get
			{
				return this.GetTable<hospital>();
			}
		}
		
		public System.Data.Linq.Table<hospital_admin> hospital_admins
		{
			get
			{
				return this.GetTable<hospital_admin>();
			}
		}
		
		public System.Data.Linq.Table<location> locations
		{
			get
			{
				return this.GetTable<location>();
			}
		}
		
		public System.Data.Linq.Table<patientthank> patientthanks
		{
			get
			{
				return this.GetTable<patientthank>();
			}
		}
		
		public System.Data.Linq.Table<question> questions
		{
			get
			{
				return this.GetTable<question>();
			}
		}
		
		public System.Data.Linq.Table<questiontag> questiontags
		{
			get
			{
				return this.GetTable<questiontag>();
			}
		}
		
		public System.Data.Linq.Table<registrationcouncil> registrationcouncils
		{
			get
			{
				return this.GetTable<registrationcouncil>();
			}
		}
		
		public System.Data.Linq.Table<speciality> specialities
		{
			get
			{
				return this.GetTable<speciality>();
			}
		}
		
		public System.Data.Linq.Table<state> states
		{
			get
			{
				return this.GetTable<state>();
			}
		}
		
		public System.Data.Linq.Table<tag> tags
		{
			get
			{
				return this.GetTable<tag>();
			}
		}
		
		public System.Data.Linq.Table<unregpatient> unregpatients
		{
			get
			{
				return this.GetTable<unregpatient>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.answer_Insert")]
		public ISingleResult<answer_InsertResult> answer_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> questionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> createDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(500)")] string answer, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string filename)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionId, userId, createDate, title, answer, filename);
			return ((ISingleResult<answer_InsertResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.answers")]
	public partial class answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _answerid;
		
		private int _questionid;
		
		private System.Nullable<int> _userid;
		
		private string _title;
		
		private string _answertext;
		
		private System.Nullable<System.DateTime> _createdate;
		
		private string _image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnansweridChanging(int value);
    partial void OnansweridChanged();
    partial void OnquestionidChanging(int value);
    partial void OnquestionidChanged();
    partial void OnuseridChanging(System.Nullable<int> value);
    partial void OnuseridChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnanswertextChanging(string value);
    partial void OnanswertextChanged();
    partial void OncreatedateChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedateChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public answer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int answerid
		{
			get
			{
				return this._answerid;
			}
			set
			{
				if ((this._answerid != value))
				{
					this.OnansweridChanging(value);
					this.SendPropertyChanging();
					this._answerid = value;
					this.SendPropertyChanged("answerid");
					this.OnansweridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionid", DbType="Int NOT NULL")]
		public int questionid
		{
			get
			{
				return this._questionid;
			}
			set
			{
				if ((this._questionid != value))
				{
					this.OnquestionidChanging(value);
					this.SendPropertyChanging();
					this._questionid = value;
					this.SendPropertyChanged("questionid");
					this.OnquestionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int")]
		public System.Nullable<int> userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answertext", DbType="VarChar(500)")]
		public string answertext
		{
			get
			{
				return this._answertext;
			}
			set
			{
				if ((this._answertext != value))
				{
					this.OnanswertextChanging(value);
					this.SendPropertyChanging();
					this._answertext = value;
					this.SendPropertyChanged("answertext");
					this.OnanswertextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdate
		{
			get
			{
				return this._createdate;
			}
			set
			{
				if ((this._createdate != value))
				{
					this.OncreatedateChanging(value);
					this.SendPropertyChanging();
					this._createdate = value;
					this.SendPropertyChanged("createdate");
					this.OncreatedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(100)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userid;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _email;
		
		private string _mobileno;
		
		private string _secondaryemail;
		
		private string _secondarymobileno;
		
		private System.Nullable<int> _gender;
		
		private System.Nullable<System.DateTime> _dateofbirth;
		
		private System.Nullable<int> _totalexperience;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<int> _countryid;
		
		private System.Nullable<int> _stateid;
		
		private System.Nullable<int> _cityid;
		
		private System.Nullable<int> _locationid;
		
		private System.Nullable<int> _height;
		
		private System.Nullable<decimal> _weight;
		
		private System.Nullable<System.DateTime> _registrationdate;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<int> _usertype;
		
		private string _photopath;
		
		private System.Nullable<bool> _isemailverified;
		
		private System.Nullable<bool> _ismobileverified;
		
		private System.Nullable<int> _pincode;
		
		private string _address;
		
		private string _registrationnumber;
		
		private System.Nullable<int> _registrationcouncil;
		
		private string _aboutme;
		
		private System.Nullable<int> _appointmentbuttonhits;
		
		private System.Nullable<System.DateTime> _registrationvalidity;
		
		private System.Nullable<bool> _apptsmsnotification;
		
		private System.Nullable<int> _created_by;
		
		private string _patientcity;
		
		private string _cgname;
		
		private string _cgemail;
		
		private string _cgmobileno;
		
		private System.Nullable<bool> _isremonedayprior;
		
		private System.Nullable<bool> _isremmorningonapptday;
		
		private System.Nullable<bool> _isremoncancellationoflasttwo;
		
		private System.Nullable<System.DateTime> _joiningdate;
		
		private System.Nullable<int> _reference_id;
		
		private System.Nullable<bool> _isdocconnectuser;
		
		private System.Nullable<int> _existing_doctor;
		
		private System.Nullable<int> _existing_patient;
		
		private System.Nullable<int> _existing_assitant;
		
		private System.Nullable<int> _askmiraiappointmentcount;
		
		private System.Nullable<int> _askmirai_userid;
		
		private System.Nullable<bool> _isgoogleaccount;
		
		private System.Nullable<bool> _isfacebookaccount;
		
		private System.Nullable<int> _countrycode1;
		
		private System.Nullable<int> _countrycode2;
		
		private System.Nullable<int> _cgcountrycode;
		
		private string _photourl;
		
		private EntitySet<hospital_admin> _hospital_admins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmobilenoChanging(string value);
    partial void OnmobilenoChanged();
    partial void OnsecondaryemailChanging(string value);
    partial void OnsecondaryemailChanged();
    partial void OnsecondarymobilenoChanging(string value);
    partial void OnsecondarymobilenoChanged();
    partial void OngenderChanging(System.Nullable<int> value);
    partial void OngenderChanged();
    partial void OndateofbirthChanging(System.Nullable<System.DateTime> value);
    partial void OndateofbirthChanged();
    partial void OntotalexperienceChanging(System.Nullable<int> value);
    partial void OntotalexperienceChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OncountryidChanging(System.Nullable<int> value);
    partial void OncountryidChanged();
    partial void OnstateidChanging(System.Nullable<int> value);
    partial void OnstateidChanged();
    partial void OncityidChanging(System.Nullable<int> value);
    partial void OncityidChanged();
    partial void OnlocationidChanging(System.Nullable<int> value);
    partial void OnlocationidChanged();
    partial void OnheightChanging(System.Nullable<int> value);
    partial void OnheightChanged();
    partial void OnweightChanging(System.Nullable<decimal> value);
    partial void OnweightChanged();
    partial void OnregistrationdateChanging(System.Nullable<System.DateTime> value);
    partial void OnregistrationdateChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OnusertypeChanging(System.Nullable<int> value);
    partial void OnusertypeChanged();
    partial void OnphotopathChanging(string value);
    partial void OnphotopathChanged();
    partial void OnisemailverifiedChanging(System.Nullable<bool> value);
    partial void OnisemailverifiedChanged();
    partial void OnismobileverifiedChanging(System.Nullable<bool> value);
    partial void OnismobileverifiedChanged();
    partial void OnpincodeChanging(System.Nullable<int> value);
    partial void OnpincodeChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnregistrationnumberChanging(string value);
    partial void OnregistrationnumberChanged();
    partial void OnregistrationcouncilChanging(System.Nullable<int> value);
    partial void OnregistrationcouncilChanged();
    partial void OnaboutmeChanging(string value);
    partial void OnaboutmeChanged();
    partial void OnappointmentbuttonhitsChanging(System.Nullable<int> value);
    partial void OnappointmentbuttonhitsChanged();
    partial void OnregistrationvalidityChanging(System.Nullable<System.DateTime> value);
    partial void OnregistrationvalidityChanged();
    partial void OnapptsmsnotificationChanging(System.Nullable<bool> value);
    partial void OnapptsmsnotificationChanged();
    partial void Oncreated_byChanging(System.Nullable<int> value);
    partial void Oncreated_byChanged();
    partial void OnpatientcityChanging(string value);
    partial void OnpatientcityChanged();
    partial void OncgnameChanging(string value);
    partial void OncgnameChanged();
    partial void OncgemailChanging(string value);
    partial void OncgemailChanged();
    partial void OncgmobilenoChanging(string value);
    partial void OncgmobilenoChanged();
    partial void OnisremonedaypriorChanging(System.Nullable<bool> value);
    partial void OnisremonedaypriorChanged();
    partial void OnisremmorningonapptdayChanging(System.Nullable<bool> value);
    partial void OnisremmorningonapptdayChanged();
    partial void OnisremoncancellationoflasttwoChanging(System.Nullable<bool> value);
    partial void OnisremoncancellationoflasttwoChanged();
    partial void OnjoiningdateChanging(System.Nullable<System.DateTime> value);
    partial void OnjoiningdateChanged();
    partial void Onreference_idChanging(System.Nullable<int> value);
    partial void Onreference_idChanged();
    partial void OnisdocconnectuserChanging(System.Nullable<bool> value);
    partial void OnisdocconnectuserChanged();
    partial void Onexisting_doctorChanging(System.Nullable<int> value);
    partial void Onexisting_doctorChanged();
    partial void Onexisting_patientChanging(System.Nullable<int> value);
    partial void Onexisting_patientChanged();
    partial void Onexisting_assitantChanging(System.Nullable<int> value);
    partial void Onexisting_assitantChanged();
    partial void OnaskmiraiappointmentcountChanging(System.Nullable<int> value);
    partial void OnaskmiraiappointmentcountChanged();
    partial void Onaskmirai_useridChanging(System.Nullable<int> value);
    partial void Onaskmirai_useridChanged();
    partial void OnisgoogleaccountChanging(System.Nullable<bool> value);
    partial void OnisgoogleaccountChanged();
    partial void OnisfacebookaccountChanging(System.Nullable<bool> value);
    partial void OnisfacebookaccountChanged();
    partial void Oncountrycode1Changing(System.Nullable<int> value);
    partial void Oncountrycode1Changed();
    partial void Oncountrycode2Changing(System.Nullable<int> value);
    partial void Oncountrycode2Changed();
    partial void OncgcountrycodeChanging(System.Nullable<int> value);
    partial void OncgcountrycodeChanged();
    partial void OnphotourlChanging(string value);
    partial void OnphotourlChanged();
    #endregion
		
		public user()
		{
			this._hospital_admins = new EntitySet<hospital_admin>(new Action<hospital_admin>(this.attach_hospital_admins), new Action<hospital_admin>(this.detach_hospital_admins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobileno", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string mobileno
		{
			get
			{
				return this._mobileno;
			}
			set
			{
				if ((this._mobileno != value))
				{
					this.OnmobilenoChanging(value);
					this.SendPropertyChanging();
					this._mobileno = value;
					this.SendPropertyChanged("mobileno");
					this.OnmobilenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryemail", DbType="VarChar(50)")]
		public string secondaryemail
		{
			get
			{
				return this._secondaryemail;
			}
			set
			{
				if ((this._secondaryemail != value))
				{
					this.OnsecondaryemailChanging(value);
					this.SendPropertyChanging();
					this._secondaryemail = value;
					this.SendPropertyChanged("secondaryemail");
					this.OnsecondaryemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondarymobileno", DbType="VarChar(15)")]
		public string secondarymobileno
		{
			get
			{
				return this._secondarymobileno;
			}
			set
			{
				if ((this._secondarymobileno != value))
				{
					this.OnsecondarymobilenoChanging(value);
					this.SendPropertyChanging();
					this._secondarymobileno = value;
					this.SendPropertyChanged("secondarymobileno");
					this.OnsecondarymobilenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Int")]
		public System.Nullable<int> gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateofbirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateofbirth
		{
			get
			{
				return this._dateofbirth;
			}
			set
			{
				if ((this._dateofbirth != value))
				{
					this.OndateofbirthChanging(value);
					this.SendPropertyChanging();
					this._dateofbirth = value;
					this.SendPropertyChanged("dateofbirth");
					this.OndateofbirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalexperience", DbType="Int")]
		public System.Nullable<int> totalexperience
		{
			get
			{
				return this._totalexperience;
			}
			set
			{
				if ((this._totalexperience != value))
				{
					this.OntotalexperienceChanging(value);
					this.SendPropertyChanging();
					this._totalexperience = value;
					this.SendPropertyChanged("totalexperience");
					this.OntotalexperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(100)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryid", DbType="Int")]
		public System.Nullable<int> countryid
		{
			get
			{
				return this._countryid;
			}
			set
			{
				if ((this._countryid != value))
				{
					this.OncountryidChanging(value);
					this.SendPropertyChanging();
					this._countryid = value;
					this.SendPropertyChanged("countryid");
					this.OncountryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateid", DbType="Int")]
		public System.Nullable<int> stateid
		{
			get
			{
				return this._stateid;
			}
			set
			{
				if ((this._stateid != value))
				{
					this.OnstateidChanging(value);
					this.SendPropertyChanging();
					this._stateid = value;
					this.SendPropertyChanged("stateid");
					this.OnstateidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cityid", DbType="Int")]
		public System.Nullable<int> cityid
		{
			get
			{
				return this._cityid;
			}
			set
			{
				if ((this._cityid != value))
				{
					this.OncityidChanging(value);
					this.SendPropertyChanging();
					this._cityid = value;
					this.SendPropertyChanged("cityid");
					this.OncityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationid", DbType="Int")]
		public System.Nullable<int> locationid
		{
			get
			{
				return this._locationid;
			}
			set
			{
				if ((this._locationid != value))
				{
					this.OnlocationidChanging(value);
					this.SendPropertyChanging();
					this._locationid = value;
					this.SendPropertyChanged("locationid");
					this.OnlocationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Int")]
		public System.Nullable<int> height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registrationdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> registrationdate
		{
			get
			{
				return this._registrationdate;
			}
			set
			{
				if ((this._registrationdate != value))
				{
					this.OnregistrationdateChanging(value);
					this.SendPropertyChanging();
					this._registrationdate = value;
					this.SendPropertyChanged("registrationdate");
					this.OnregistrationdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="Int")]
		public System.Nullable<int> usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this.OnusertypeChanging(value);
					this.SendPropertyChanging();
					this._usertype = value;
					this.SendPropertyChanged("usertype");
					this.OnusertypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photopath", DbType="VarChar(256)")]
		public string photopath
		{
			get
			{
				return this._photopath;
			}
			set
			{
				if ((this._photopath != value))
				{
					this.OnphotopathChanging(value);
					this.SendPropertyChanging();
					this._photopath = value;
					this.SendPropertyChanged("photopath");
					this.OnphotopathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isemailverified", DbType="Bit")]
		public System.Nullable<bool> isemailverified
		{
			get
			{
				return this._isemailverified;
			}
			set
			{
				if ((this._isemailverified != value))
				{
					this.OnisemailverifiedChanging(value);
					this.SendPropertyChanging();
					this._isemailverified = value;
					this.SendPropertyChanged("isemailverified");
					this.OnisemailverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ismobileverified", DbType="Bit")]
		public System.Nullable<bool> ismobileverified
		{
			get
			{
				return this._ismobileverified;
			}
			set
			{
				if ((this._ismobileverified != value))
				{
					this.OnismobileverifiedChanging(value);
					this.SendPropertyChanging();
					this._ismobileverified = value;
					this.SendPropertyChanged("ismobileverified");
					this.OnismobileverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pincode", DbType="Int")]
		public System.Nullable<int> pincode
		{
			get
			{
				return this._pincode;
			}
			set
			{
				if ((this._pincode != value))
				{
					this.OnpincodeChanging(value);
					this.SendPropertyChanging();
					this._pincode = value;
					this.SendPropertyChanged("pincode");
					this.OnpincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registrationnumber", DbType="VarChar(20)")]
		public string registrationnumber
		{
			get
			{
				return this._registrationnumber;
			}
			set
			{
				if ((this._registrationnumber != value))
				{
					this.OnregistrationnumberChanging(value);
					this.SendPropertyChanging();
					this._registrationnumber = value;
					this.SendPropertyChanged("registrationnumber");
					this.OnregistrationnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registrationcouncil", DbType="Int")]
		public System.Nullable<int> registrationcouncil
		{
			get
			{
				return this._registrationcouncil;
			}
			set
			{
				if ((this._registrationcouncil != value))
				{
					this.OnregistrationcouncilChanging(value);
					this.SendPropertyChanging();
					this._registrationcouncil = value;
					this.SendPropertyChanged("registrationcouncil");
					this.OnregistrationcouncilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aboutme", DbType="VarChar(200)")]
		public string aboutme
		{
			get
			{
				return this._aboutme;
			}
			set
			{
				if ((this._aboutme != value))
				{
					this.OnaboutmeChanging(value);
					this.SendPropertyChanging();
					this._aboutme = value;
					this.SendPropertyChanged("aboutme");
					this.OnaboutmeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmentbuttonhits", DbType="Int")]
		public System.Nullable<int> appointmentbuttonhits
		{
			get
			{
				return this._appointmentbuttonhits;
			}
			set
			{
				if ((this._appointmentbuttonhits != value))
				{
					this.OnappointmentbuttonhitsChanging(value);
					this.SendPropertyChanging();
					this._appointmentbuttonhits = value;
					this.SendPropertyChanged("appointmentbuttonhits");
					this.OnappointmentbuttonhitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registrationvalidity", DbType="DateTime")]
		public System.Nullable<System.DateTime> registrationvalidity
		{
			get
			{
				return this._registrationvalidity;
			}
			set
			{
				if ((this._registrationvalidity != value))
				{
					this.OnregistrationvalidityChanging(value);
					this.SendPropertyChanging();
					this._registrationvalidity = value;
					this.SendPropertyChanged("registrationvalidity");
					this.OnregistrationvalidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apptsmsnotification", DbType="Bit")]
		public System.Nullable<bool> apptsmsnotification
		{
			get
			{
				return this._apptsmsnotification;
			}
			set
			{
				if ((this._apptsmsnotification != value))
				{
					this.OnapptsmsnotificationChanging(value);
					this.SendPropertyChanging();
					this._apptsmsnotification = value;
					this.SendPropertyChanged("apptsmsnotification");
					this.OnapptsmsnotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="Int")]
		public System.Nullable<int> created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientcity", DbType="VarChar(100)")]
		public string patientcity
		{
			get
			{
				return this._patientcity;
			}
			set
			{
				if ((this._patientcity != value))
				{
					this.OnpatientcityChanging(value);
					this.SendPropertyChanging();
					this._patientcity = value;
					this.SendPropertyChanged("patientcity");
					this.OnpatientcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cgname", DbType="VarChar(100)")]
		public string cgname
		{
			get
			{
				return this._cgname;
			}
			set
			{
				if ((this._cgname != value))
				{
					this.OncgnameChanging(value);
					this.SendPropertyChanging();
					this._cgname = value;
					this.SendPropertyChanged("cgname");
					this.OncgnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cgemail", DbType="VarChar(100)")]
		public string cgemail
		{
			get
			{
				return this._cgemail;
			}
			set
			{
				if ((this._cgemail != value))
				{
					this.OncgemailChanging(value);
					this.SendPropertyChanging();
					this._cgemail = value;
					this.SendPropertyChanged("cgemail");
					this.OncgemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cgmobileno", DbType="VarChar(15)")]
		public string cgmobileno
		{
			get
			{
				return this._cgmobileno;
			}
			set
			{
				if ((this._cgmobileno != value))
				{
					this.OncgmobilenoChanging(value);
					this.SendPropertyChanging();
					this._cgmobileno = value;
					this.SendPropertyChanged("cgmobileno");
					this.OncgmobilenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isremonedayprior", DbType="Bit")]
		public System.Nullable<bool> isremonedayprior
		{
			get
			{
				return this._isremonedayprior;
			}
			set
			{
				if ((this._isremonedayprior != value))
				{
					this.OnisremonedaypriorChanging(value);
					this.SendPropertyChanging();
					this._isremonedayprior = value;
					this.SendPropertyChanged("isremonedayprior");
					this.OnisremonedaypriorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isremmorningonapptday", DbType="Bit")]
		public System.Nullable<bool> isremmorningonapptday
		{
			get
			{
				return this._isremmorningonapptday;
			}
			set
			{
				if ((this._isremmorningonapptday != value))
				{
					this.OnisremmorningonapptdayChanging(value);
					this.SendPropertyChanging();
					this._isremmorningonapptday = value;
					this.SendPropertyChanged("isremmorningonapptday");
					this.OnisremmorningonapptdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isremoncancellationoflasttwo", DbType="Bit")]
		public System.Nullable<bool> isremoncancellationoflasttwo
		{
			get
			{
				return this._isremoncancellationoflasttwo;
			}
			set
			{
				if ((this._isremoncancellationoflasttwo != value))
				{
					this.OnisremoncancellationoflasttwoChanging(value);
					this.SendPropertyChanging();
					this._isremoncancellationoflasttwo = value;
					this.SendPropertyChanged("isremoncancellationoflasttwo");
					this.OnisremoncancellationoflasttwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_joiningdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> joiningdate
		{
			get
			{
				return this._joiningdate;
			}
			set
			{
				if ((this._joiningdate != value))
				{
					this.OnjoiningdateChanging(value);
					this.SendPropertyChanging();
					this._joiningdate = value;
					this.SendPropertyChanged("joiningdate");
					this.OnjoiningdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reference_id", DbType="Int")]
		public System.Nullable<int> reference_id
		{
			get
			{
				return this._reference_id;
			}
			set
			{
				if ((this._reference_id != value))
				{
					this.Onreference_idChanging(value);
					this.SendPropertyChanging();
					this._reference_id = value;
					this.SendPropertyChanged("reference_id");
					this.Onreference_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isdocconnectuser", DbType="Bit")]
		public System.Nullable<bool> isdocconnectuser
		{
			get
			{
				return this._isdocconnectuser;
			}
			set
			{
				if ((this._isdocconnectuser != value))
				{
					this.OnisdocconnectuserChanging(value);
					this.SendPropertyChanging();
					this._isdocconnectuser = value;
					this.SendPropertyChanged("isdocconnectuser");
					this.OnisdocconnectuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existing_doctor", DbType="Int")]
		public System.Nullable<int> existing_doctor
		{
			get
			{
				return this._existing_doctor;
			}
			set
			{
				if ((this._existing_doctor != value))
				{
					this.Onexisting_doctorChanging(value);
					this.SendPropertyChanging();
					this._existing_doctor = value;
					this.SendPropertyChanged("existing_doctor");
					this.Onexisting_doctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existing_patient", DbType="Int")]
		public System.Nullable<int> existing_patient
		{
			get
			{
				return this._existing_patient;
			}
			set
			{
				if ((this._existing_patient != value))
				{
					this.Onexisting_patientChanging(value);
					this.SendPropertyChanging();
					this._existing_patient = value;
					this.SendPropertyChanged("existing_patient");
					this.Onexisting_patientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existing_assitant", DbType="Int")]
		public System.Nullable<int> existing_assitant
		{
			get
			{
				return this._existing_assitant;
			}
			set
			{
				if ((this._existing_assitant != value))
				{
					this.Onexisting_assitantChanging(value);
					this.SendPropertyChanging();
					this._existing_assitant = value;
					this.SendPropertyChanged("existing_assitant");
					this.Onexisting_assitantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_askmiraiappointmentcount", DbType="Int")]
		public System.Nullable<int> askmiraiappointmentcount
		{
			get
			{
				return this._askmiraiappointmentcount;
			}
			set
			{
				if ((this._askmiraiappointmentcount != value))
				{
					this.OnaskmiraiappointmentcountChanging(value);
					this.SendPropertyChanging();
					this._askmiraiappointmentcount = value;
					this.SendPropertyChanged("askmiraiappointmentcount");
					this.OnaskmiraiappointmentcountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_askmirai_userid", DbType="Int")]
		public System.Nullable<int> askmirai_userid
		{
			get
			{
				return this._askmirai_userid;
			}
			set
			{
				if ((this._askmirai_userid != value))
				{
					this.Onaskmirai_useridChanging(value);
					this.SendPropertyChanging();
					this._askmirai_userid = value;
					this.SendPropertyChanged("askmirai_userid");
					this.Onaskmirai_useridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isgoogleaccount", DbType="Bit")]
		public System.Nullable<bool> isgoogleaccount
		{
			get
			{
				return this._isgoogleaccount;
			}
			set
			{
				if ((this._isgoogleaccount != value))
				{
					this.OnisgoogleaccountChanging(value);
					this.SendPropertyChanging();
					this._isgoogleaccount = value;
					this.SendPropertyChanged("isgoogleaccount");
					this.OnisgoogleaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isfacebookaccount", DbType="Bit")]
		public System.Nullable<bool> isfacebookaccount
		{
			get
			{
				return this._isfacebookaccount;
			}
			set
			{
				if ((this._isfacebookaccount != value))
				{
					this.OnisfacebookaccountChanging(value);
					this.SendPropertyChanging();
					this._isfacebookaccount = value;
					this.SendPropertyChanged("isfacebookaccount");
					this.OnisfacebookaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countrycode1", DbType="Int")]
		public System.Nullable<int> countrycode1
		{
			get
			{
				return this._countrycode1;
			}
			set
			{
				if ((this._countrycode1 != value))
				{
					this.Oncountrycode1Changing(value);
					this.SendPropertyChanging();
					this._countrycode1 = value;
					this.SendPropertyChanged("countrycode1");
					this.Oncountrycode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countrycode2", DbType="Int")]
		public System.Nullable<int> countrycode2
		{
			get
			{
				return this._countrycode2;
			}
			set
			{
				if ((this._countrycode2 != value))
				{
					this.Oncountrycode2Changing(value);
					this.SendPropertyChanging();
					this._countrycode2 = value;
					this.SendPropertyChanged("countrycode2");
					this.Oncountrycode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cgcountrycode", DbType="Int")]
		public System.Nullable<int> cgcountrycode
		{
			get
			{
				return this._cgcountrycode;
			}
			set
			{
				if ((this._cgcountrycode != value))
				{
					this.OncgcountrycodeChanging(value);
					this.SendPropertyChanging();
					this._cgcountrycode = value;
					this.SendPropertyChanged("cgcountrycode");
					this.OncgcountrycodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photourl", DbType="VarChar(200)")]
		public string photourl
		{
			get
			{
				return this._photourl;
			}
			set
			{
				if ((this._photourl != value))
				{
					this.OnphotourlChanging(value);
					this.SendPropertyChanging();
					this._photourl = value;
					this.SendPropertyChanged("photourl");
					this.OnphotourlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_hospital_admin", Storage="_hospital_admins", ThisKey="userid", OtherKey="assistant_id")]
		public EntitySet<hospital_admin> hospital_admins
		{
			get
			{
				return this._hospital_admins;
			}
			set
			{
				this._hospital_admins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hospital_admins(hospital_admin entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_hospital_admins(hospital_admin entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appointments")]
	public partial class appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _appointmentid;
		
		private string _subject;
		
		private System.Nullable<int> _patientid;
		
		private int _doctorid;
		
		private System.Nullable<int> _docassistantid;
		
		private int _doclocationid;
		
		private string _description;
		
		private System.DateTime _starttime;
		
		private System.DateTime _endtime;
		
		private System.Nullable<short> _isalldayevent;
		
		private System.Nullable<int> _appointmenttypeid;
		
		private int _status;
		
		private System.DateTime _createdat;
		
		private int _createdby;
		
		private System.Nullable<System.DateTime> _lastmodifiedat;
		
		private System.Nullable<int> _lastmodifiedby;
		
		private string _patientname;
		
		private string _patientemail;
		
		private string _patientmobile;
		
		private string _comments;
		
		private string _feedback;
		
		private System.Nullable<int> _rating;
		
		private System.Nullable<int> _unregpatientid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnappointmentidChanging(int value);
    partial void OnappointmentidChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnpatientidChanging(System.Nullable<int> value);
    partial void OnpatientidChanged();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OndocassistantidChanging(System.Nullable<int> value);
    partial void OndocassistantidChanged();
    partial void OndoclocationidChanging(int value);
    partial void OndoclocationidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnstarttimeChanging(System.DateTime value);
    partial void OnstarttimeChanged();
    partial void OnendtimeChanging(System.DateTime value);
    partial void OnendtimeChanged();
    partial void OnisalldayeventChanging(System.Nullable<short> value);
    partial void OnisalldayeventChanged();
    partial void OnappointmenttypeidChanging(System.Nullable<int> value);
    partial void OnappointmenttypeidChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OncreatedatChanging(System.DateTime value);
    partial void OncreatedatChanged();
    partial void OncreatedbyChanging(int value);
    partial void OncreatedbyChanged();
    partial void OnlastmodifiedatChanging(System.Nullable<System.DateTime> value);
    partial void OnlastmodifiedatChanged();
    partial void OnlastmodifiedbyChanging(System.Nullable<int> value);
    partial void OnlastmodifiedbyChanged();
    partial void OnpatientnameChanging(string value);
    partial void OnpatientnameChanged();
    partial void OnpatientemailChanging(string value);
    partial void OnpatientemailChanged();
    partial void OnpatientmobileChanging(string value);
    partial void OnpatientmobileChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void OnfeedbackChanging(string value);
    partial void OnfeedbackChanged();
    partial void OnratingChanging(System.Nullable<int> value);
    partial void OnratingChanged();
    partial void OnunregpatientidChanging(System.Nullable<int> value);
    partial void OnunregpatientidChanged();
    #endregion
		
		public appointment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmentid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int appointmentid
		{
			get
			{
				return this._appointmentid;
			}
			set
			{
				if ((this._appointmentid != value))
				{
					this.OnappointmentidChanging(value);
					this.SendPropertyChanging();
					this._appointmentid = value;
					this.SendPropertyChanged("appointmentid");
					this.OnappointmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(200)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientid", DbType="Int")]
		public System.Nullable<int> patientid
		{
			get
			{
				return this._patientid;
			}
			set
			{
				if ((this._patientid != value))
				{
					this.OnpatientidChanging(value);
					this.SendPropertyChanging();
					this._patientid = value;
					this.SendPropertyChanged("patientid");
					this.OnpatientidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL")]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docassistantid", DbType="Int")]
		public System.Nullable<int> docassistantid
		{
			get
			{
				return this._docassistantid;
			}
			set
			{
				if ((this._docassistantid != value))
				{
					this.OndocassistantidChanging(value);
					this.SendPropertyChanging();
					this._docassistantid = value;
					this.SendPropertyChanged("docassistantid");
					this.OndocassistantidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doclocationid", DbType="Int NOT NULL")]
		public int doclocationid
		{
			get
			{
				return this._doclocationid;
			}
			set
			{
				if ((this._doclocationid != value))
				{
					this.OndoclocationidChanging(value);
					this.SendPropertyChanging();
					this._doclocationid = value;
					this.SendPropertyChanged("doclocationid");
					this.OndoclocationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starttime", DbType="DateTime NOT NULL")]
		public System.DateTime starttime
		{
			get
			{
				return this._starttime;
			}
			set
			{
				if ((this._starttime != value))
				{
					this.OnstarttimeChanging(value);
					this.SendPropertyChanging();
					this._starttime = value;
					this.SendPropertyChanged("starttime");
					this.OnstarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endtime", DbType="DateTime NOT NULL")]
		public System.DateTime endtime
		{
			get
			{
				return this._endtime;
			}
			set
			{
				if ((this._endtime != value))
				{
					this.OnendtimeChanging(value);
					this.SendPropertyChanging();
					this._endtime = value;
					this.SendPropertyChanged("endtime");
					this.OnendtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isalldayevent", DbType="SmallInt")]
		public System.Nullable<short> isalldayevent
		{
			get
			{
				return this._isalldayevent;
			}
			set
			{
				if ((this._isalldayevent != value))
				{
					this.OnisalldayeventChanging(value);
					this.SendPropertyChanging();
					this._isalldayevent = value;
					this.SendPropertyChanged("isalldayevent");
					this.OnisalldayeventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmenttypeid", DbType="Int")]
		public System.Nullable<int> appointmenttypeid
		{
			get
			{
				return this._appointmenttypeid;
			}
			set
			{
				if ((this._appointmenttypeid != value))
				{
					this.OnappointmenttypeidChanging(value);
					this.SendPropertyChanging();
					this._appointmenttypeid = value;
					this.SendPropertyChanged("appointmenttypeid");
					this.OnappointmenttypeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdat", DbType="DateTime NOT NULL")]
		public System.DateTime createdat
		{
			get
			{
				return this._createdat;
			}
			set
			{
				if ((this._createdat != value))
				{
					this.OncreatedatChanging(value);
					this.SendPropertyChanging();
					this._createdat = value;
					this.SendPropertyChanged("createdat");
					this.OncreatedatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdby", DbType="Int NOT NULL")]
		public int createdby
		{
			get
			{
				return this._createdby;
			}
			set
			{
				if ((this._createdby != value))
				{
					this.OncreatedbyChanging(value);
					this.SendPropertyChanging();
					this._createdby = value;
					this.SendPropertyChanged("createdby");
					this.OncreatedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastmodifiedat", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastmodifiedat
		{
			get
			{
				return this._lastmodifiedat;
			}
			set
			{
				if ((this._lastmodifiedat != value))
				{
					this.OnlastmodifiedatChanging(value);
					this.SendPropertyChanging();
					this._lastmodifiedat = value;
					this.SendPropertyChanged("lastmodifiedat");
					this.OnlastmodifiedatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastmodifiedby", DbType="Int")]
		public System.Nullable<int> lastmodifiedby
		{
			get
			{
				return this._lastmodifiedby;
			}
			set
			{
				if ((this._lastmodifiedby != value))
				{
					this.OnlastmodifiedbyChanging(value);
					this.SendPropertyChanging();
					this._lastmodifiedby = value;
					this.SendPropertyChanged("lastmodifiedby");
					this.OnlastmodifiedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientname", DbType="VarChar(100)")]
		public string patientname
		{
			get
			{
				return this._patientname;
			}
			set
			{
				if ((this._patientname != value))
				{
					this.OnpatientnameChanging(value);
					this.SendPropertyChanging();
					this._patientname = value;
					this.SendPropertyChanged("patientname");
					this.OnpatientnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientemail", DbType="VarChar(100)")]
		public string patientemail
		{
			get
			{
				return this._patientemail;
			}
			set
			{
				if ((this._patientemail != value))
				{
					this.OnpatientemailChanging(value);
					this.SendPropertyChanging();
					this._patientemail = value;
					this.SendPropertyChanged("patientemail");
					this.OnpatientemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientmobile", DbType="VarChar(15)")]
		public string patientmobile
		{
			get
			{
				return this._patientmobile;
			}
			set
			{
				if ((this._patientmobile != value))
				{
					this.OnpatientmobileChanging(value);
					this.SendPropertyChanging();
					this._patientmobile = value;
					this.SendPropertyChanged("patientmobile");
					this.OnpatientmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="VarChar(500)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feedback", DbType="VarChar(500)")]
		public string feedback
		{
			get
			{
				return this._feedback;
			}
			set
			{
				if ((this._feedback != value))
				{
					this.OnfeedbackChanging(value);
					this.SendPropertyChanging();
					this._feedback = value;
					this.SendPropertyChanged("feedback");
					this.OnfeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Int")]
		public System.Nullable<int> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unregpatientid", DbType="Int")]
		public System.Nullable<int> unregpatientid
		{
			get
			{
				return this._unregpatientid;
			}
			set
			{
				if ((this._unregpatientid != value))
				{
					this.OnunregpatientidChanging(value);
					this.SendPropertyChanging();
					this._unregpatientid = value;
					this.SendPropertyChanged("unregpatientid");
					this.OnunregpatientidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.appointmenttypes")]
	public partial class appointmenttype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _appointmenttypeid;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnappointmenttypeidChanging(int value);
    partial void OnappointmenttypeidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public appointmenttype()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appointmenttypeid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int appointmenttypeid
		{
			get
			{
				return this._appointmenttypeid;
			}
			set
			{
				if ((this._appointmenttypeid != value))
				{
					this.OnappointmenttypeidChanging(value);
					this.SendPropertyChanging();
					this._appointmenttypeid = value;
					this.SendPropertyChanged("appointmenttypeid");
					this.OnappointmenttypeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.city")]
	public partial class city : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cityid;
		
		private System.Nullable<int> _stateid;
		
		private string _name;
		
		private EntitySet<hospital> _hospitals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncityidChanging(int value);
    partial void OncityidChanged();
    partial void OnstateidChanging(System.Nullable<int> value);
    partial void OnstateidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public city()
		{
			this._hospitals = new EntitySet<hospital>(new Action<hospital>(this.attach_hospitals), new Action<hospital>(this.detach_hospitals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cityid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cityid
		{
			get
			{
				return this._cityid;
			}
			set
			{
				if ((this._cityid != value))
				{
					this.OncityidChanging(value);
					this.SendPropertyChanging();
					this._cityid = value;
					this.SendPropertyChanged("cityid");
					this.OncityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateid", DbType="Int")]
		public System.Nullable<int> stateid
		{
			get
			{
				return this._stateid;
			}
			set
			{
				if ((this._stateid != value))
				{
					this.OnstateidChanging(value);
					this.SendPropertyChanging();
					this._stateid = value;
					this.SendPropertyChanged("stateid");
					this.OnstateidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_hospital", Storage="_hospitals", ThisKey="cityid", OtherKey="cityid")]
		public EntitySet<hospital> hospitals
		{
			get
			{
				return this._hospitals;
			}
			set
			{
				this._hospitals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hospitals(hospital entity)
		{
			this.SendPropertyChanging();
			entity.city = this;
		}
		
		private void detach_hospitals(hospital entity)
		{
			this.SendPropertyChanging();
			entity.city = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.config")]
	public partial class config : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _code;
		
		private string _value;
		
		private string _msg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    #endregion
		
		public config()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msg", DbType="VarChar(256)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.country")]
	public partial class country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _countryid;
		
		private string _name;
		
		private string _countrycode;
		
		private EntitySet<hospital> _hospitals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncountryidChanging(int value);
    partial void OncountryidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncountrycodeChanging(string value);
    partial void OncountrycodeChanged();
    #endregion
		
		public country()
		{
			this._hospitals = new EntitySet<hospital>(new Action<hospital>(this.attach_hospitals), new Action<hospital>(this.detach_hospitals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int countryid
		{
			get
			{
				return this._countryid;
			}
			set
			{
				if ((this._countryid != value))
				{
					this.OncountryidChanging(value);
					this.SendPropertyChanging();
					this._countryid = value;
					this.SendPropertyChanged("countryid");
					this.OncountryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countrycode", DbType="VarChar(20)")]
		public string countrycode
		{
			get
			{
				return this._countrycode;
			}
			set
			{
				if ((this._countrycode != value))
				{
					this.OncountrycodeChanging(value);
					this.SendPropertyChanging();
					this._countrycode = value;
					this.SendPropertyChanged("countrycode");
					this.OncountrycodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_hospital", Storage="_hospitals", ThisKey="countryid", OtherKey="countryid")]
		public EntitySet<hospital> hospitals
		{
			get
			{
				return this._hospitals;
			}
			set
			{
				this._hospitals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hospitals(hospital entity)
		{
			this.SendPropertyChanging();
			entity.country = this;
		}
		
		private void detach_hospitals(hospital entity)
		{
			this.SendPropertyChanging();
			entity.country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.degree")]
	public partial class degree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _degreeid;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndegreeidChanging(int value);
    partial void OndegreeidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public degree()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degreeid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int degreeid
		{
			get
			{
				return this._degreeid;
			}
			set
			{
				if ((this._degreeid != value))
				{
					this.OndegreeidChanging(value);
					this.SendPropertyChanging();
					this._degreeid = value;
					this.SendPropertyChanged("degreeid");
					this.OndegreeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.delayedappointmentsrecords")]
	public partial class delayedappointmentsrecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _locationid;
		
		private System.DateTime _date;
		
		private string _delayedby;
		
		private string _starttime;
		
		private string _endtime;
		
		private int _doctorid;
		
		private string _delay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlocationidChanging(int value);
    partial void OnlocationidChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OndelayedbyChanging(string value);
    partial void OndelayedbyChanged();
    partial void OnstarttimeChanging(string value);
    partial void OnstarttimeChanged();
    partial void OnendtimeChanging(string value);
    partial void OnendtimeChanged();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OndelayChanging(string value);
    partial void OndelayChanged();
    #endregion
		
		public delayedappointmentsrecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationid", DbType="Int NOT NULL")]
		public int locationid
		{
			get
			{
				return this._locationid;
			}
			set
			{
				if ((this._locationid != value))
				{
					this.OnlocationidChanging(value);
					this.SendPropertyChanging();
					this._locationid = value;
					this.SendPropertyChanged("locationid");
					this.OnlocationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_delayedby", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string delayedby
		{
			get
			{
				return this._delayedby;
			}
			set
			{
				if ((this._delayedby != value))
				{
					this.OndelayedbyChanging(value);
					this.SendPropertyChanging();
					this._delayedby = value;
					this.SendPropertyChanged("delayedby");
					this.OndelayedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starttime", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string starttime
		{
			get
			{
				return this._starttime;
			}
			set
			{
				if ((this._starttime != value))
				{
					this.OnstarttimeChanging(value);
					this.SendPropertyChanging();
					this._starttime = value;
					this.SendPropertyChanged("starttime");
					this.OnstarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endtime", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string endtime
		{
			get
			{
				return this._endtime;
			}
			set
			{
				if ((this._endtime != value))
				{
					this.OnendtimeChanging(value);
					this.SendPropertyChanging();
					this._endtime = value;
					this.SendPropertyChanged("endtime");
					this.OnendtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL")]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_delay", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string delay
		{
			get
			{
				return this._delay;
			}
			set
			{
				if ((this._delay != value))
				{
					this.OndelayChanging(value);
					this.SendPropertyChanging();
					this._delay = value;
					this.SendPropertyChanged("delay");
					this.OndelayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctoragrees")]
	public partial class doctoragree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docagreeid;
		
		private System.Nullable<int> _doctorid;
		
		private System.Nullable<int> _answerid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocagreeidChanging(int value);
    partial void OndocagreeidChanged();
    partial void OndoctoridChanging(System.Nullable<int> value);
    partial void OndoctoridChanged();
    partial void OnansweridChanging(System.Nullable<int> value);
    partial void OnansweridChanged();
    #endregion
		
		public doctoragree()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docagreeid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int docagreeid
		{
			get
			{
				return this._docagreeid;
			}
			set
			{
				if ((this._docagreeid != value))
				{
					this.OndocagreeidChanging(value);
					this.SendPropertyChanging();
					this._docagreeid = value;
					this.SendPropertyChanged("docagreeid");
					this.OndocagreeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int")]
		public System.Nullable<int> doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerid", DbType="Int")]
		public System.Nullable<int> answerid
		{
			get
			{
				return this._answerid;
			}
			set
			{
				if ((this._answerid != value))
				{
					this.OnansweridChanging(value);
					this.SendPropertyChanging();
					this._answerid = value;
					this.SendPropertyChanged("answerid");
					this.OnansweridChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctorlocations")]
	public partial class doctorlocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doctorlocationid;
		
		private int _doctorid;
		
		private int _countryid;
		
		private int _stateid;
		
		private int _cityid;
		
		private int _locationid;
		
		private string _clinicname;
		
		private string _address;
		
		private string _telephone;
		
		private System.Nullable<int> _timeslot;
		
		private System.Nullable<double> _consultationfees;
		
		private System.Nullable<bool> _isprimary;
		
		private System.Nullable<int> _hospitalid;
		
		private string _hospitalname;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoctorlocationidChanging(int value);
    partial void OndoctorlocationidChanged();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OncountryidChanging(int value);
    partial void OncountryidChanged();
    partial void OnstateidChanging(int value);
    partial void OnstateidChanged();
    partial void OncityidChanging(int value);
    partial void OncityidChanged();
    partial void OnlocationidChanging(int value);
    partial void OnlocationidChanged();
    partial void OnclinicnameChanging(string value);
    partial void OnclinicnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OntimeslotChanging(System.Nullable<int> value);
    partial void OntimeslotChanged();
    partial void OnconsultationfeesChanging(System.Nullable<double> value);
    partial void OnconsultationfeesChanged();
    partial void OnisprimaryChanging(System.Nullable<bool> value);
    partial void OnisprimaryChanged();
    partial void OnhospitalidChanging(System.Nullable<int> value);
    partial void OnhospitalidChanged();
    partial void OnhospitalnameChanging(string value);
    partial void OnhospitalnameChanged();
    #endregion
		
		public doctorlocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorlocationid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doctorlocationid
		{
			get
			{
				return this._doctorlocationid;
			}
			set
			{
				if ((this._doctorlocationid != value))
				{
					this.OndoctorlocationidChanging(value);
					this.SendPropertyChanging();
					this._doctorlocationid = value;
					this.SendPropertyChanged("doctorlocationid");
					this.OndoctorlocationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL")]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryid", DbType="Int NOT NULL")]
		public int countryid
		{
			get
			{
				return this._countryid;
			}
			set
			{
				if ((this._countryid != value))
				{
					this.OncountryidChanging(value);
					this.SendPropertyChanging();
					this._countryid = value;
					this.SendPropertyChanged("countryid");
					this.OncountryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateid", DbType="Int NOT NULL")]
		public int stateid
		{
			get
			{
				return this._stateid;
			}
			set
			{
				if ((this._stateid != value))
				{
					this.OnstateidChanging(value);
					this.SendPropertyChanging();
					this._stateid = value;
					this.SendPropertyChanged("stateid");
					this.OnstateidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cityid", DbType="Int NOT NULL")]
		public int cityid
		{
			get
			{
				return this._cityid;
			}
			set
			{
				if ((this._cityid != value))
				{
					this.OncityidChanging(value);
					this.SendPropertyChanging();
					this._cityid = value;
					this.SendPropertyChanged("cityid");
					this.OncityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationid", DbType="Int NOT NULL")]
		public int locationid
		{
			get
			{
				return this._locationid;
			}
			set
			{
				if ((this._locationid != value))
				{
					this.OnlocationidChanging(value);
					this.SendPropertyChanging();
					this._locationid = value;
					this.SendPropertyChanged("locationid");
					this.OnlocationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clinicname", DbType="VarChar(100)")]
		public string clinicname
		{
			get
			{
				return this._clinicname;
			}
			set
			{
				if ((this._clinicname != value))
				{
					this.OnclinicnameChanging(value);
					this.SendPropertyChanging();
					this._clinicname = value;
					this.SendPropertyChanged("clinicname");
					this.OnclinicnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(250)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(15)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeslot", DbType="Int")]
		public System.Nullable<int> timeslot
		{
			get
			{
				return this._timeslot;
			}
			set
			{
				if ((this._timeslot != value))
				{
					this.OntimeslotChanging(value);
					this.SendPropertyChanging();
					this._timeslot = value;
					this.SendPropertyChanged("timeslot");
					this.OntimeslotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_consultationfees", DbType="Float")]
		public System.Nullable<double> consultationfees
		{
			get
			{
				return this._consultationfees;
			}
			set
			{
				if ((this._consultationfees != value))
				{
					this.OnconsultationfeesChanging(value);
					this.SendPropertyChanging();
					this._consultationfees = value;
					this.SendPropertyChanged("consultationfees");
					this.OnconsultationfeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isprimary", DbType="Bit")]
		public System.Nullable<bool> isprimary
		{
			get
			{
				return this._isprimary;
			}
			set
			{
				if ((this._isprimary != value))
				{
					this.OnisprimaryChanging(value);
					this.SendPropertyChanging();
					this._isprimary = value;
					this.SendPropertyChanged("isprimary");
					this.OnisprimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hospitalid", DbType="Int")]
		public System.Nullable<int> hospitalid
		{
			get
			{
				return this._hospitalid;
			}
			set
			{
				if ((this._hospitalid != value))
				{
					this.OnhospitalidChanging(value);
					this.SendPropertyChanging();
					this._hospitalid = value;
					this.SendPropertyChanged("hospitalid");
					this.OnhospitalidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hospitalname", DbType="VarChar(100)")]
		public string hospitalname
		{
			get
			{
				return this._hospitalname;
			}
			set
			{
				if ((this._hospitalname != value))
				{
					this.OnhospitalnameChanging(value);
					this.SendPropertyChanging();
					this._hospitalname = value;
					this.SendPropertyChanged("hospitalname");
					this.OnhospitalnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctorlocationworkinghours")]
	public partial class doctorlocationworkinghour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doclocworkinghoursid;
		
		private int _doclocationid;
		
		private string _fromtime;
		
		private string _totime;
		
		private System.Nullable<bool> _Monday;
		
		private System.Nullable<bool> _Tuesday;
		
		private System.Nullable<bool> _Wednesday;
		
		private System.Nullable<bool> _Thursday;
		
		private System.Nullable<bool> _Friday;
		
		private System.Nullable<bool> _Saturday;
		
		private System.Nullable<bool> _Sunday;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoclocworkinghoursidChanging(int value);
    partial void OndoclocworkinghoursidChanged();
    partial void OndoclocationidChanging(int value);
    partial void OndoclocationidChanged();
    partial void OnfromtimeChanging(string value);
    partial void OnfromtimeChanged();
    partial void OntotimeChanging(string value);
    partial void OntotimeChanged();
    partial void OnMondayChanging(System.Nullable<bool> value);
    partial void OnMondayChanged();
    partial void OnTuesdayChanging(System.Nullable<bool> value);
    partial void OnTuesdayChanged();
    partial void OnWednesdayChanging(System.Nullable<bool> value);
    partial void OnWednesdayChanged();
    partial void OnThursdayChanging(System.Nullable<bool> value);
    partial void OnThursdayChanged();
    partial void OnFridayChanging(System.Nullable<bool> value);
    partial void OnFridayChanged();
    partial void OnSaturdayChanging(System.Nullable<bool> value);
    partial void OnSaturdayChanged();
    partial void OnSundayChanging(System.Nullable<bool> value);
    partial void OnSundayChanged();
    #endregion
		
		public doctorlocationworkinghour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doclocworkinghoursid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doclocworkinghoursid
		{
			get
			{
				return this._doclocworkinghoursid;
			}
			set
			{
				if ((this._doclocworkinghoursid != value))
				{
					this.OndoclocworkinghoursidChanging(value);
					this.SendPropertyChanging();
					this._doclocworkinghoursid = value;
					this.SendPropertyChanged("doclocworkinghoursid");
					this.OndoclocworkinghoursidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doclocationid", DbType="Int NOT NULL")]
		public int doclocationid
		{
			get
			{
				return this._doclocationid;
			}
			set
			{
				if ((this._doclocationid != value))
				{
					this.OndoclocationidChanging(value);
					this.SendPropertyChanging();
					this._doclocationid = value;
					this.SendPropertyChanged("doclocationid");
					this.OndoclocationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromtime", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string fromtime
		{
			get
			{
				return this._fromtime;
			}
			set
			{
				if ((this._fromtime != value))
				{
					this.OnfromtimeChanging(value);
					this.SendPropertyChanging();
					this._fromtime = value;
					this.SendPropertyChanged("fromtime");
					this.OnfromtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totime", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string totime
		{
			get
			{
				return this._totime;
			}
			set
			{
				if ((this._totime != value))
				{
					this.OntotimeChanging(value);
					this.SendPropertyChanging();
					this._totime = value;
					this.SendPropertyChanged("totime");
					this.OntotimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monday", DbType="Bit")]
		public System.Nullable<bool> Monday
		{
			get
			{
				return this._Monday;
			}
			set
			{
				if ((this._Monday != value))
				{
					this.OnMondayChanging(value);
					this.SendPropertyChanging();
					this._Monday = value;
					this.SendPropertyChanged("Monday");
					this.OnMondayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuesday", DbType="Bit")]
		public System.Nullable<bool> Tuesday
		{
			get
			{
				return this._Tuesday;
			}
			set
			{
				if ((this._Tuesday != value))
				{
					this.OnTuesdayChanging(value);
					this.SendPropertyChanging();
					this._Tuesday = value;
					this.SendPropertyChanged("Tuesday");
					this.OnTuesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wednesday", DbType="Bit")]
		public System.Nullable<bool> Wednesday
		{
			get
			{
				return this._Wednesday;
			}
			set
			{
				if ((this._Wednesday != value))
				{
					this.OnWednesdayChanging(value);
					this.SendPropertyChanging();
					this._Wednesday = value;
					this.SendPropertyChanged("Wednesday");
					this.OnWednesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thursday", DbType="Bit")]
		public System.Nullable<bool> Thursday
		{
			get
			{
				return this._Thursday;
			}
			set
			{
				if ((this._Thursday != value))
				{
					this.OnThursdayChanging(value);
					this.SendPropertyChanging();
					this._Thursday = value;
					this.SendPropertyChanged("Thursday");
					this.OnThursdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Friday", DbType="Bit")]
		public System.Nullable<bool> Friday
		{
			get
			{
				return this._Friday;
			}
			set
			{
				if ((this._Friday != value))
				{
					this.OnFridayChanging(value);
					this.SendPropertyChanging();
					this._Friday = value;
					this.SendPropertyChanged("Friday");
					this.OnFridayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saturday", DbType="Bit")]
		public System.Nullable<bool> Saturday
		{
			get
			{
				return this._Saturday;
			}
			set
			{
				if ((this._Saturday != value))
				{
					this.OnSaturdayChanging(value);
					this.SendPropertyChanging();
					this._Saturday = value;
					this.SendPropertyChanged("Saturday");
					this.OnSaturdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sunday", DbType="Bit")]
		public System.Nullable<bool> Sunday
		{
			get
			{
				return this._Sunday;
			}
			set
			{
				if ((this._Sunday != value))
				{
					this.OnSundayChanging(value);
					this.SendPropertyChanging();
					this._Sunday = value;
					this.SendPropertyChanged("Sunday");
					this.OnSundayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctorqualification")]
	public partial class doctorqualification
	{
		
		private int _doctorid;
		
		private int _degreeid;
		
		private string _university;
		
		private string _otherdegree;
		
		public doctorqualification()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL")]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this._doctorid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degreeid", DbType="Int NOT NULL")]
		public int degreeid
		{
			get
			{
				return this._degreeid;
			}
			set
			{
				if ((this._degreeid != value))
				{
					this._degreeid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_university", DbType="VarChar(100)")]
		public string university
		{
			get
			{
				return this._university;
			}
			set
			{
				if ((this._university != value))
				{
					this._university = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otherdegree", DbType="VarChar(100)")]
		public string otherdegree
		{
			get
			{
				return this._otherdegree;
			}
			set
			{
				if ((this._otherdegree != value))
				{
					this._otherdegree = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctorquestions")]
	public partial class doctorquestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _docquestionid;
		
		private System.Nullable<int> _questionid;
		
		private System.Nullable<int> _doctorid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndocquestionidChanging(int value);
    partial void OndocquestionidChanged();
    partial void OnquestionidChanging(System.Nullable<int> value);
    partial void OnquestionidChanged();
    partial void OndoctoridChanging(System.Nullable<int> value);
    partial void OndoctoridChanged();
    #endregion
		
		public doctorquestion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docquestionid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int docquestionid
		{
			get
			{
				return this._docquestionid;
			}
			set
			{
				if ((this._docquestionid != value))
				{
					this.OndocquestionidChanging(value);
					this.SendPropertyChanging();
					this._docquestionid = value;
					this.SendPropertyChanged("docquestionid");
					this.OndocquestionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionid", DbType="Int")]
		public System.Nullable<int> questionid
		{
			get
			{
				return this._questionid;
			}
			set
			{
				if ((this._questionid != value))
				{
					this.OnquestionidChanging(value);
					this.SendPropertyChanging();
					this._questionid = value;
					this.SendPropertyChanged("questionid");
					this.OnquestionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int")]
		public System.Nullable<int> doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctorsdetails")]
	public partial class doctorsdetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doctordetailsid;
		
		private int _doctorid;
		
		private System.Nullable<int> _type;
		
		private string _details;
		
		private string _certification;
		
		private string _society;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoctordetailsidChanging(int value);
    partial void OndoctordetailsidChanged();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OntypeChanging(System.Nullable<int> value);
    partial void OntypeChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OncertificationChanging(string value);
    partial void OncertificationChanged();
    partial void OnsocietyChanging(string value);
    partial void OnsocietyChanged();
    #endregion
		
		public doctorsdetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctordetailsid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int doctordetailsid
		{
			get
			{
				return this._doctordetailsid;
			}
			set
			{
				if ((this._doctordetailsid != value))
				{
					this.OndoctordetailsidChanging(value);
					this.SendPropertyChanging();
					this._doctordetailsid = value;
					this.SendPropertyChanged("doctordetailsid");
					this.OndoctordetailsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL")]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int")]
		public System.Nullable<int> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(1000)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certification", DbType="VarChar(150)")]
		public string certification
		{
			get
			{
				return this._certification;
			}
			set
			{
				if ((this._certification != value))
				{
					this.OncertificationChanging(value);
					this.SendPropertyChanging();
					this._certification = value;
					this.SendPropertyChanged("certification");
					this.OncertificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_society", DbType="VarChar(150)")]
		public string society
		{
			get
			{
				return this._society;
			}
			set
			{
				if ((this._society != value))
				{
					this.OnsocietyChanging(value);
					this.SendPropertyChanging();
					this._society = value;
					this.SendPropertyChanged("society");
					this.OnsocietyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctorspecialities")]
	public partial class doctorspeciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _doctorid;
		
		private int _specialityid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OnspecialityidChanging(int value);
    partial void OnspecialityidChanged();
    #endregion
		
		public doctorspeciality()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialityid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int specialityid
		{
			get
			{
				return this._specialityid;
			}
			set
			{
				if ((this._specialityid != value))
				{
					this.OnspecialityidChanging(value);
					this.SendPropertyChanging();
					this._specialityid = value;
					this.SendPropertyChanged("specialityid");
					this.OnspecialityidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.healthinformation")]
	public partial class healthinformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _healthinformationid;
		
		private int _doctorid;
		
		private string _healthmessagesubject;
		
		private string _healthmessagedetails;
		
		private System.DateTime _createddate;
		
		private string _createdby;
		
		private System.Nullable<System.DateTime> _modifieddate;
		
		private string _modiifiedby;
		
		private System.Nullable<System.DateTime> _publishdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhealthinformationidChanging(int value);
    partial void OnhealthinformationidChanged();
    partial void OndoctoridChanging(int value);
    partial void OndoctoridChanged();
    partial void OnhealthmessagesubjectChanging(string value);
    partial void OnhealthmessagesubjectChanged();
    partial void OnhealthmessagedetailsChanging(string value);
    partial void OnhealthmessagedetailsChanged();
    partial void OncreateddateChanging(System.DateTime value);
    partial void OncreateddateChanged();
    partial void OncreatedbyChanging(string value);
    partial void OncreatedbyChanged();
    partial void OnmodifieddateChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifieddateChanged();
    partial void OnmodiifiedbyChanging(string value);
    partial void OnmodiifiedbyChanged();
    partial void OnpublishdateChanging(System.Nullable<System.DateTime> value);
    partial void OnpublishdateChanged();
    #endregion
		
		public healthinformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_healthinformationid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int healthinformationid
		{
			get
			{
				return this._healthinformationid;
			}
			set
			{
				if ((this._healthinformationid != value))
				{
					this.OnhealthinformationidChanging(value);
					this.SendPropertyChanging();
					this._healthinformationid = value;
					this.SendPropertyChanged("healthinformationid");
					this.OnhealthinformationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", DbType="Int NOT NULL")]
		public int doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_healthmessagesubject", DbType="VarChar(200)")]
		public string healthmessagesubject
		{
			get
			{
				return this._healthmessagesubject;
			}
			set
			{
				if ((this._healthmessagesubject != value))
				{
					this.OnhealthmessagesubjectChanging(value);
					this.SendPropertyChanging();
					this._healthmessagesubject = value;
					this.SendPropertyChanged("healthmessagesubject");
					this.OnhealthmessagesubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_healthmessagedetails", DbType="VarChar(MAX)")]
		public string healthmessagedetails
		{
			get
			{
				return this._healthmessagedetails;
			}
			set
			{
				if ((this._healthmessagedetails != value))
				{
					this.OnhealthmessagedetailsChanging(value);
					this.SendPropertyChanging();
					this._healthmessagedetails = value;
					this.SendPropertyChanged("healthmessagedetails");
					this.OnhealthmessagedetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createddate", DbType="DateTime NOT NULL")]
		public System.DateTime createddate
		{
			get
			{
				return this._createddate;
			}
			set
			{
				if ((this._createddate != value))
				{
					this.OncreateddateChanging(value);
					this.SendPropertyChanging();
					this._createddate = value;
					this.SendPropertyChanged("createddate");
					this.OncreateddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string createdby
		{
			get
			{
				return this._createdby;
			}
			set
			{
				if ((this._createdby != value))
				{
					this.OncreatedbyChanging(value);
					this.SendPropertyChanging();
					this._createdby = value;
					this.SendPropertyChanged("createdby");
					this.OncreatedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modifieddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> modifieddate
		{
			get
			{
				return this._modifieddate;
			}
			set
			{
				if ((this._modifieddate != value))
				{
					this.OnmodifieddateChanging(value);
					this.SendPropertyChanging();
					this._modifieddate = value;
					this.SendPropertyChanged("modifieddate");
					this.OnmodifieddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modiifiedby", DbType="VarChar(50)")]
		public string modiifiedby
		{
			get
			{
				return this._modiifiedby;
			}
			set
			{
				if ((this._modiifiedby != value))
				{
					this.OnmodiifiedbyChanging(value);
					this.SendPropertyChanging();
					this._modiifiedby = value;
					this.SendPropertyChanged("modiifiedby");
					this.OnmodiifiedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> publishdate
		{
			get
			{
				return this._publishdate;
			}
			set
			{
				if ((this._publishdate != value))
				{
					this.OnpublishdateChanging(value);
					this.SendPropertyChanging();
					this._publishdate = value;
					this.SendPropertyChanged("publishdate");
					this.OnpublishdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hospital")]
	public partial class hospital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _countryid;
		
		private int _stateid;
		
		private int _cityid;
		
		private string _address1;
		
		private string _mobileno;
		
		private System.DateTime _created_date;
		
		private int _location_id;
		
		private System.Nullable<int> _countrycode;
		
		private EntitySet<hospital_admin> _hospital_admins;
		
		private EntityRef<city> _city;
		
		private EntityRef<country> _country;
		
		private EntityRef<location> _location;
		
		private EntityRef<state> _state;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncountryidChanging(int value);
    partial void OncountryidChanged();
    partial void OnstateidChanging(int value);
    partial void OnstateidChanged();
    partial void OncityidChanging(int value);
    partial void OncityidChanged();
    partial void Onaddress1Changing(string value);
    partial void Onaddress1Changed();
    partial void OnmobilenoChanging(string value);
    partial void OnmobilenoChanged();
    partial void Oncreated_dateChanging(System.DateTime value);
    partial void Oncreated_dateChanged();
    partial void Onlocation_idChanging(int value);
    partial void Onlocation_idChanged();
    partial void OncountrycodeChanging(System.Nullable<int> value);
    partial void OncountrycodeChanged();
    #endregion
		
		public hospital()
		{
			this._hospital_admins = new EntitySet<hospital_admin>(new Action<hospital_admin>(this.attach_hospital_admins), new Action<hospital_admin>(this.detach_hospital_admins));
			this._city = default(EntityRef<city>);
			this._country = default(EntityRef<country>);
			this._location = default(EntityRef<location>);
			this._state = default(EntityRef<state>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryid", DbType="Int NOT NULL")]
		public int countryid
		{
			get
			{
				return this._countryid;
			}
			set
			{
				if ((this._countryid != value))
				{
					if (this._country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryidChanging(value);
					this.SendPropertyChanging();
					this._countryid = value;
					this.SendPropertyChanged("countryid");
					this.OncountryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateid", DbType="Int NOT NULL")]
		public int stateid
		{
			get
			{
				return this._stateid;
			}
			set
			{
				if ((this._stateid != value))
				{
					if (this._state.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstateidChanging(value);
					this.SendPropertyChanging();
					this._stateid = value;
					this.SendPropertyChanged("stateid");
					this.OnstateidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cityid", DbType="Int NOT NULL")]
		public int cityid
		{
			get
			{
				return this._cityid;
			}
			set
			{
				if ((this._cityid != value))
				{
					if (this._city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncityidChanging(value);
					this.SendPropertyChanging();
					this._cityid = value;
					this.SendPropertyChanged("cityid");
					this.OncityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address1", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string address1
		{
			get
			{
				return this._address1;
			}
			set
			{
				if ((this._address1 != value))
				{
					this.Onaddress1Changing(value);
					this.SendPropertyChanging();
					this._address1 = value;
					this.SendPropertyChanged("address1");
					this.Onaddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobileno", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string mobileno
		{
			get
			{
				return this._mobileno;
			}
			set
			{
				if ((this._mobileno != value))
				{
					this.OnmobilenoChanging(value);
					this.SendPropertyChanging();
					this._mobileno = value;
					this.SendPropertyChanged("mobileno");
					this.OnmobilenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime NOT NULL")]
		public System.DateTime created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int NOT NULL")]
		public int location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countrycode", DbType="Int")]
		public System.Nullable<int> countrycode
		{
			get
			{
				return this._countrycode;
			}
			set
			{
				if ((this._countrycode != value))
				{
					this.OncountrycodeChanging(value);
					this.SendPropertyChanging();
					this._countrycode = value;
					this.SendPropertyChanged("countrycode");
					this.OncountrycodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hospital_hospital_admin", Storage="_hospital_admins", ThisKey="id", OtherKey="hospital_id")]
		public EntitySet<hospital_admin> hospital_admins
		{
			get
			{
				return this._hospital_admins;
			}
			set
			{
				this._hospital_admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_hospital", Storage="_city", ThisKey="cityid", OtherKey="cityid", IsForeignKey=true)]
		public city city
		{
			get
			{
				return this._city.Entity;
			}
			set
			{
				city previousValue = this._city.Entity;
				if (((previousValue != value) 
							|| (this._city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._city.Entity = null;
						previousValue.hospitals.Remove(this);
					}
					this._city.Entity = value;
					if ((value != null))
					{
						value.hospitals.Add(this);
						this._cityid = value.cityid;
					}
					else
					{
						this._cityid = default(int);
					}
					this.SendPropertyChanged("city");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="country_hospital", Storage="_country", ThisKey="countryid", OtherKey="countryid", IsForeignKey=true)]
		public country country
		{
			get
			{
				return this._country.Entity;
			}
			set
			{
				country previousValue = this._country.Entity;
				if (((previousValue != value) 
							|| (this._country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._country.Entity = null;
						previousValue.hospitals.Remove(this);
					}
					this._country.Entity = value;
					if ((value != null))
					{
						value.hospitals.Add(this);
						this._countryid = value.countryid;
					}
					else
					{
						this._countryid = default(int);
					}
					this.SendPropertyChanged("country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_hospital", Storage="_location", ThisKey="location_id", OtherKey="locationid", IsForeignKey=true)]
		public location location
		{
			get
			{
				return this._location.Entity;
			}
			set
			{
				location previousValue = this._location.Entity;
				if (((previousValue != value) 
							|| (this._location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._location.Entity = null;
						previousValue.hospitals.Remove(this);
					}
					this._location.Entity = value;
					if ((value != null))
					{
						value.hospitals.Add(this);
						this._location_id = value.locationid;
					}
					else
					{
						this._location_id = default(int);
					}
					this.SendPropertyChanged("location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_hospital", Storage="_state", ThisKey="stateid", OtherKey="stateid", IsForeignKey=true)]
		public state state
		{
			get
			{
				return this._state.Entity;
			}
			set
			{
				state previousValue = this._state.Entity;
				if (((previousValue != value) 
							|| (this._state.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._state.Entity = null;
						previousValue.hospitals.Remove(this);
					}
					this._state.Entity = value;
					if ((value != null))
					{
						value.hospitals.Add(this);
						this._stateid = value.stateid;
					}
					else
					{
						this._stateid = default(int);
					}
					this.SendPropertyChanged("state");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hospital_admins(hospital_admin entity)
		{
			this.SendPropertyChanging();
			entity.hospital = this;
		}
		
		private void detach_hospital_admins(hospital_admin entity)
		{
			this.SendPropertyChanging();
			entity.hospital = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hospital_admin")]
	public partial class hospital_admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _hospital_id;
		
		private int _assistant_id;
		
		private EntityRef<hospital> _hospital;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onhospital_idChanging(int value);
    partial void Onhospital_idChanged();
    partial void Onassistant_idChanging(int value);
    partial void Onassistant_idChanged();
    #endregion
		
		public hospital_admin()
		{
			this._hospital = default(EntityRef<hospital>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hospital_id", DbType="Int NOT NULL")]
		public int hospital_id
		{
			get
			{
				return this._hospital_id;
			}
			set
			{
				if ((this._hospital_id != value))
				{
					if (this._hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhospital_idChanging(value);
					this.SendPropertyChanging();
					this._hospital_id = value;
					this.SendPropertyChanged("hospital_id");
					this.Onhospital_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assistant_id", DbType="Int NOT NULL")]
		public int assistant_id
		{
			get
			{
				return this._assistant_id;
			}
			set
			{
				if ((this._assistant_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onassistant_idChanging(value);
					this.SendPropertyChanging();
					this._assistant_id = value;
					this.SendPropertyChanged("assistant_id");
					this.Onassistant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hospital_hospital_admin", Storage="_hospital", ThisKey="hospital_id", OtherKey="id", IsForeignKey=true)]
		public hospital hospital
		{
			get
			{
				return this._hospital.Entity;
			}
			set
			{
				hospital previousValue = this._hospital.Entity;
				if (((previousValue != value) 
							|| (this._hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hospital.Entity = null;
						previousValue.hospital_admins.Remove(this);
					}
					this._hospital.Entity = value;
					if ((value != null))
					{
						value.hospital_admins.Add(this);
						this._hospital_id = value.id;
					}
					else
					{
						this._hospital_id = default(int);
					}
					this.SendPropertyChanged("hospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_hospital_admin", Storage="_user", ThisKey="assistant_id", OtherKey="userid", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.hospital_admins.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.hospital_admins.Add(this);
						this._assistant_id = value.userid;
					}
					else
					{
						this._assistant_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.location")]
	public partial class location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _locationid;
		
		private int _cityid;
		
		private string _name;
		
		private EntitySet<hospital> _hospitals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlocationidChanging(int value);
    partial void OnlocationidChanged();
    partial void OncityidChanging(int value);
    partial void OncityidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public location()
		{
			this._hospitals = new EntitySet<hospital>(new Action<hospital>(this.attach_hospitals), new Action<hospital>(this.detach_hospitals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int locationid
		{
			get
			{
				return this._locationid;
			}
			set
			{
				if ((this._locationid != value))
				{
					this.OnlocationidChanging(value);
					this.SendPropertyChanging();
					this._locationid = value;
					this.SendPropertyChanged("locationid");
					this.OnlocationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cityid", DbType="Int NOT NULL")]
		public int cityid
		{
			get
			{
				return this._cityid;
			}
			set
			{
				if ((this._cityid != value))
				{
					this.OncityidChanging(value);
					this.SendPropertyChanging();
					this._cityid = value;
					this.SendPropertyChanged("cityid");
					this.OncityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(250)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_hospital", Storage="_hospitals", ThisKey="locationid", OtherKey="location_id")]
		public EntitySet<hospital> hospitals
		{
			get
			{
				return this._hospitals;
			}
			set
			{
				this._hospitals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hospitals(hospital entity)
		{
			this.SendPropertyChanging();
			entity.location = this;
		}
		
		private void detach_hospitals(hospital entity)
		{
			this.SendPropertyChanging();
			entity.location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patientthanks")]
	public partial class patientthank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patientthanksid;
		
		private System.Nullable<int> _userid;
		
		private System.Nullable<int> _answerid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpatientthanksidChanging(int value);
    partial void OnpatientthanksidChanged();
    partial void OnuseridChanging(System.Nullable<int> value);
    partial void OnuseridChanged();
    partial void OnansweridChanging(System.Nullable<int> value);
    partial void OnansweridChanged();
    #endregion
		
		public patientthank()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientthanksid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int patientthanksid
		{
			get
			{
				return this._patientthanksid;
			}
			set
			{
				if ((this._patientthanksid != value))
				{
					this.OnpatientthanksidChanging(value);
					this.SendPropertyChanging();
					this._patientthanksid = value;
					this.SendPropertyChanged("patientthanksid");
					this.OnpatientthanksidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int")]
		public System.Nullable<int> userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answerid", DbType="Int")]
		public System.Nullable<int> answerid
		{
			get
			{
				return this._answerid;
			}
			set
			{
				if ((this._answerid != value))
				{
					this.OnansweridChanging(value);
					this.SendPropertyChanging();
					this._answerid = value;
					this.SendPropertyChanged("answerid");
					this.OnansweridChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.questions")]
	public partial class question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _questionid;
		
		private System.Nullable<int> _userid;
		
		private int _status;
		
		private System.DateTime _createdate;
		
		private string _questiontext;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnquestionidChanging(int value);
    partial void OnquestionidChanged();
    partial void OnuseridChanging(System.Nullable<int> value);
    partial void OnuseridChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OncreatedateChanging(System.DateTime value);
    partial void OncreatedateChanged();
    partial void OnquestiontextChanging(string value);
    partial void OnquestiontextChanged();
    #endregion
		
		public question()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int questionid
		{
			get
			{
				return this._questionid;
			}
			set
			{
				if ((this._questionid != value))
				{
					this.OnquestionidChanging(value);
					this.SendPropertyChanging();
					this._questionid = value;
					this.SendPropertyChanged("questionid");
					this.OnquestionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int")]
		public System.Nullable<int> userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdate", DbType="DateTime NOT NULL")]
		public System.DateTime createdate
		{
			get
			{
				return this._createdate;
			}
			set
			{
				if ((this._createdate != value))
				{
					this.OncreatedateChanging(value);
					this.SendPropertyChanging();
					this._createdate = value;
					this.SendPropertyChanged("createdate");
					this.OncreatedateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questiontext", DbType="VarChar(200)")]
		public string questiontext
		{
			get
			{
				return this._questiontext;
			}
			set
			{
				if ((this._questiontext != value))
				{
					this.OnquestiontextChanging(value);
					this.SendPropertyChanging();
					this._questiontext = value;
					this.SendPropertyChanged("questiontext");
					this.OnquestiontextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.questiontags")]
	public partial class questiontag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _questiontagid;
		
		private System.Nullable<int> _questionid;
		
		private System.Nullable<int> _tagid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnquestiontagidChanging(int value);
    partial void OnquestiontagidChanged();
    partial void OnquestionidChanging(System.Nullable<int> value);
    partial void OnquestionidChanged();
    partial void OntagidChanging(System.Nullable<int> value);
    partial void OntagidChanged();
    #endregion
		
		public questiontag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questiontagid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int questiontagid
		{
			get
			{
				return this._questiontagid;
			}
			set
			{
				if ((this._questiontagid != value))
				{
					this.OnquestiontagidChanging(value);
					this.SendPropertyChanging();
					this._questiontagid = value;
					this.SendPropertyChanged("questiontagid");
					this.OnquestiontagidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionid", DbType="Int")]
		public System.Nullable<int> questionid
		{
			get
			{
				return this._questionid;
			}
			set
			{
				if ((this._questionid != value))
				{
					this.OnquestionidChanging(value);
					this.SendPropertyChanging();
					this._questionid = value;
					this.SendPropertyChanged("questionid");
					this.OnquestionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagid", DbType="Int")]
		public System.Nullable<int> tagid
		{
			get
			{
				return this._tagid;
			}
			set
			{
				if ((this._tagid != value))
				{
					this.OntagidChanging(value);
					this.SendPropertyChanging();
					this._tagid = value;
					this.SendPropertyChanged("tagid");
					this.OntagidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registrationcouncil")]
	public partial class registrationcouncil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _regcouncilid;
		
		private int _countryid;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnregcouncilidChanging(int value);
    partial void OnregcouncilidChanged();
    partial void OncountryidChanging(int value);
    partial void OncountryidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public registrationcouncil()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regcouncilid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int regcouncilid
		{
			get
			{
				return this._regcouncilid;
			}
			set
			{
				if ((this._regcouncilid != value))
				{
					this.OnregcouncilidChanging(value);
					this.SendPropertyChanging();
					this._regcouncilid = value;
					this.SendPropertyChanged("regcouncilid");
					this.OnregcouncilidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryid", DbType="Int NOT NULL")]
		public int countryid
		{
			get
			{
				return this._countryid;
			}
			set
			{
				if ((this._countryid != value))
				{
					this.OncountryidChanging(value);
					this.SendPropertyChanging();
					this._countryid = value;
					this.SendPropertyChanged("countryid");
					this.OncountryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.specialities")]
	public partial class speciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _specialityid;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnspecialityidChanging(int value);
    partial void OnspecialityidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public speciality()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialityid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int specialityid
		{
			get
			{
				return this._specialityid;
			}
			set
			{
				if ((this._specialityid != value))
				{
					this.OnspecialityidChanging(value);
					this.SendPropertyChanging();
					this._specialityid = value;
					this.SendPropertyChanged("specialityid");
					this.OnspecialityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.state")]
	public partial class state : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stateid;
		
		private System.Nullable<int> _countryid;
		
		private string _name;
		
		private EntitySet<hospital> _hospitals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstateidChanging(int value);
    partial void OnstateidChanged();
    partial void OncountryidChanging(System.Nullable<int> value);
    partial void OncountryidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public state()
		{
			this._hospitals = new EntitySet<hospital>(new Action<hospital>(this.attach_hospitals), new Action<hospital>(this.detach_hospitals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int stateid
		{
			get
			{
				return this._stateid;
			}
			set
			{
				if ((this._stateid != value))
				{
					this.OnstateidChanging(value);
					this.SendPropertyChanging();
					this._stateid = value;
					this.SendPropertyChanged("stateid");
					this.OnstateidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryid", DbType="Int")]
		public System.Nullable<int> countryid
		{
			get
			{
				return this._countryid;
			}
			set
			{
				if ((this._countryid != value))
				{
					this.OncountryidChanging(value);
					this.SendPropertyChanging();
					this._countryid = value;
					this.SendPropertyChanged("countryid");
					this.OncountryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_hospital", Storage="_hospitals", ThisKey="stateid", OtherKey="stateid")]
		public EntitySet<hospital> hospitals
		{
			get
			{
				return this._hospitals;
			}
			set
			{
				this._hospitals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hospitals(hospital entity)
		{
			this.SendPropertyChanging();
			entity.state = this;
		}
		
		private void detach_hospitals(hospital entity)
		{
			this.SendPropertyChanging();
			entity.state = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tag")]
	public partial class tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tagid;
		
		private string _tagname;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntagidChanging(int value);
    partial void OntagidChanged();
    partial void OntagnameChanging(string value);
    partial void OntagnameChanged();
    #endregion
		
		public tag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tagid
		{
			get
			{
				return this._tagid;
			}
			set
			{
				if ((this._tagid != value))
				{
					this.OntagidChanging(value);
					this.SendPropertyChanging();
					this._tagid = value;
					this.SendPropertyChanged("tagid");
					this.OntagidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagname", DbType="VarChar(50)")]
		public string tagname
		{
			get
			{
				return this._tagname;
			}
			set
			{
				if ((this._tagname != value))
				{
					this.OntagnameChanging(value);
					this.SendPropertyChanging();
					this._tagname = value;
					this.SendPropertyChanged("tagname");
					this.OntagnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.unregpatient")]
	public partial class unregpatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _email;
		
		private string _mobileno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmobilenoChanging(string value);
    partial void OnmobilenoChanged();
    #endregion
		
		public unregpatient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobileno", DbType="VarChar(15)")]
		public string mobileno
		{
			get
			{
				return this._mobileno;
			}
			set
			{
				if ((this._mobileno != value))
				{
					this.OnmobilenoChanging(value);
					this.SendPropertyChanging();
					this._mobileno = value;
					this.SendPropertyChanged("mobileno");
					this.OnmobilenoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class answer_InsertResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public answer_InsertResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
