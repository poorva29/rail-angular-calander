@model MiraiConsultMVC.Models.Profile

@{
    ViewBag.Title = "PatientProfile";
    Layout = "~/Views/Shared/_PatientMasterLayout.cshtml";
}
<script type="text/javascript" src="../Scripts/utility.js"></script>
@Scripts.Render("~/bundles/validation")
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    {
        <div class="row-fluid patientprofile_div">
            <div class="span12 main-outter-padding">
                <div class="row-fluid">
                    <div class="span12 cust-header-name-text">
                        <h5 class="title cust-header-main-text-title"> My Profile</h5>
                    </div>
                </div>
                <div class="wrapper-bordered" id="SuccessMessagediv" visible="false">
                    <div class="row-fluid">
                        <div class="span12">
                            <label id="lblSuccessMessage"></label>
                        </div>
                    </div>
                </div>
                <div id="controlcontainer" class="wrapper-bordered cust-font-style " visible="true">
                    <div class="row-fluid">
                        <div class="span12" id="errorMessageDiv" visible="false">
                            <label id="lblErrorMessage"></label>
                        </div>
                    </div>
                    <div class=" " id="patinet_profile">
                        <div class="row-fluid custom-equal-padding">
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span6 intermediate-size-padding">
                                    <div class="control-group">
                                        <label class="control-label cust-font-style required ">First Name:</label>
                                        <div class="controls">
                                            @Html.TextBoxFor(m => m.FirstName, new { @class = "cust-no-border cust-lightgreen input-block-level max-width min-width", placeholder = "First Name" })
                                            @Html.ValidationMessageFor(m => m.FirstName, string.Empty, new { @class = "validation-summary-errors" })
                                        </div>
                                    </div>
                                </div>
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label required  cust-font-style ">Last Name:</label>
                                        <div class="controls">
                                            @Html.TextBoxFor(m => m.LastName, new { @class = "input-block-level cust-lightgreen cust-gray max-width min-width", placeholder = "Last Name" })
                                            @Html.ValidationMessageFor(m => m.LastName, string.Empty, new { @class = "validation-summary-errors" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label required cust-font-style ">Email:</label>
                                        <div class="controls">
                                            @Html.TextBoxFor(m => m.Email, new { @class = "input-block-level cust-lightgreen cust-gray max-width min-width", placeholder = "Email" })
                                            @Html.ValidationMessageFor(m => m.Email, string.Empty, new { @class = "validation-summary-errors" })
                                        </div>
                                    </div>
                                </div>
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">Mobile No:</label>
                                        <div class="controls">
                                            @Html.TextBoxFor(m => m.MobileNo, new { @class = "input-block-level cust-lightgreen max-width min-width", placeholder = "Mobile No", maxlength = "15" })
                                            @Html.ValidationMessageFor(m => m.MobileNo, string.Empty, new { @class = "validation-summary-errors" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">Date of Birth:</label>
                                        <div class="controls">
                                            <div class="input-append date" id="dob" data-date-format="dd/mm/yyyy" data-date-start-view="decade"
                                                 data-date-enddate="new Date()">
                                                @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "cust-lightgreen input-without-right-curve  date_box_width txtdateOfBirth", @style = "margin-top:0px;", placeholder = "Date Of Birth" })
                                                @Html.ValidationMessageFor(m => m.DateOfBirth, string.Empty, new { @class = "validation-summary-errors" })
                                                <span class="add-on add-on-green  icon-with-right-curve"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">Gender:</label>
                                        <div class="controls">
                                            @if (Model.Gender != null)
                                            { 
                                                <label class="radio inline cust-font-style">                                              
                                                    @Html.RadioButton("Gender", "0", Model.Gender == 0, new { @class = "cust-font-style" }) Male
                                                </label>
                                                <label class="radio inline gendermargin cust-font-style">
                                                    @Html.RadioButton("Gender", "1", Model.Gender == 1, new { @class = "cust-font-style" }) Female
                                                </label>
                                            }
                                            else
                                            {
                                                <label class="radio inline cust-font-style">                                              
                                                    @Html.RadioButton("Gender", "Male", true , new { @class = "cust-font-style" }) Male
                                                </label>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">Country:</label>
                                        <div class="controls">
                                            @*@if (ViewBag.countries != null)
                                            {*@
                                                @Html.DropDownListFor(m => Model.CountryId, new SelectList(ViewBag.countries, "Value", "Text", Model.CountryId), "--Select Country--", new { @class = "input-block-level cust-lightgreen cust-gray drop-arrows max-width min-width", id = "ddlCountry", onchange = "selectedIndexChanged(this.value)" })
                                            @*}
                                            else
                                            {
                                                @Html.DropDownListFor(m => Model.CountryId, new SelectList(string.Empty), "--Select Country--", new { @class = "input-block-level cust-lightgreen cust-gray drop-arrows max-width min-width" })
                                            }*@
                                        </div>
                                    </div>
                                </div>
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">State:</label>
                                        <div class="controls">
                                            @if (ViewBag.states != null)
                                            {
                                                @Html.DropDownListFor(m => Model.StateId, new SelectList(ViewBag.states, "Value", "Text", Model.StateId), "--Select State--", new { @class = "input-block-level  cust-lightgreen drop-arrows max-width min-width" })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(m => Model.StateId, new SelectList("0"), new { @class = "input-block-level  cust-lightgreen drop-arrows max-width min-width" })
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">City:</label>
                                        <div class="controls">
                                            @if (ViewBag.cities != null)
                                            {
                                                @Html.DropDownListFor(m => Model.CityId, new SelectList(ViewBag.cities, "Value", "Text", Model.CityId), "--Select City--", new { @class = "input-block-level cust-lightgreen drop-arrows max-width min-width" })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(m => Model.CityId, new SelectList("0"), "--Select City--", new { @class = "input-block-level cust-lightgreen drop-arrows max-width min-width" })
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">Location:</label>
                                        <div class="controls">
                                            @if (ViewBag.locations != null)
                                            {
                                                @Html.DropDownListFor(m => Model.LocationId, new SelectList(ViewBag.locations, "Value", "Text", Model.LocationId), "--Select Location--", new { @class = "input-block-level cust-gray drop-arrows cust-lightgreen max-width min-width" })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(m => Model.LocationId, new SelectList("0"), "--Select Location--", new { @class = "input-block-level cust-gray drop-arrows cust-lightgreen max-width min-width" })
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">Address:</label>
                                        <div class="controls">
                                            @Html.TextAreaFor(m => m.Address, new { @class = "input-block-level cust-lightgreen cust-gray max-width min-width", placeholder = "Address", rows = "2", columns = "50" })
                                        </div>
                                    </div>
                                </div>
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">Pin Code:</label>
                                        <div class="controls">
                                            @Html.TextBoxFor(m => m.Pincode, new { @class = "input-block-level cust-lightgreen cust-lightgreen max-width min-width", placeholder = "Pin Code", maxlength = "6", id = "txtPinCode" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">Height (in cm):</label>
                                        <div class="controls">
                                            @Html.TextBoxFor(m => m.Height, new { @class = "input-block-level cust-lightgreen cust-lightgreen max-width min-width", placeholder = "Height in cm", maxlength = "5", id = "txtHeight" })
                                        </div>
                                    </div>
                                </div>
                                <div class="span6 span_margin">
                                    <div class="control-group controlgroup_margin">
                                        <label class="control-label cust-font-style">Weight (in kg):</label>
                                        <div class="controls">
                                            @Html.TextBoxFor(m => m.Weight, new { @class = "input-block-level cust-lightgreen cust-gray max-width min-width", placeholder = "Weight in kg", maxlength = "5", id = "txtWeight" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row-fluid cust-padding-bw-row">
                        <div class="span12 btn-padding-left btn-margin-top profile-button" style="text-align:center">
                            <input type="submit" class="btn cust-button-radius cust-skyblue cust-uppercase cust-space-around cust-medium-button cust-font-style" id="btnUpdatePatientAccount" value="Update" />
                            <input type="reset" class="btn cust-button-radius cust-uppercase cust-red cust-space-around cust-medium-button cust-font-style" value="Reset" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="span2"></div>
    }
}
<script type="text/javascript" src="../Scripts/bootstrap-datepicker.js"></script>
<script type="text/javascript" src="../Scripts/dateofbirthvalidation.js"></script>
<script type="text/javascript">
    $(function () {
        $('#dob').datepicker();
        $('CountryId').val()
    });

    function selectedIndexChanged() {
        var countryId = document.getElementById('ddlCountry').value;
        alert(countryId);
        $.ajax({
            type: "GET",
            url: '@Url.Action("Patients/poupulateStateByCountry")' + "?countryid =" +countryId,
            data: param = "",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(){alert("success")},
            error: function () { alert("Error") }
        });
    }

        function successFunc(data, status) {
            alert(data);
        }

        function errorFunc() {
            alert('error');
        }

    //function getStatebyCountry(countryId) {
    //    $.ajax({
    //        type: 'GET',
    //        dataType: 'json',
    //        url: '../../Services/UserService.svc/getStatebyCountry?countryid=' + countryId,
    //        success: function (response) {
    //            response = JSON.parse(response);
    //            $("#state_select").empty();
    //            $("#city_select").empty();
    //            $("#location_select").empty();
    //            for (var i = 0; i < response.length; i++) {
    //                $("#state_select").append($('<option>').text(response[i].name).attr('value', response[i].stateid));
    //            };
    //        },
    //        error: function () {
    //            alert("Error");
    //        }
    //    });
    //}

    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-48132984-2', 'askmirai.com');
    ga('send', 'pageview');

</script>

