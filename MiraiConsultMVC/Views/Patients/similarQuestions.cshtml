@model IEnumerable<MiraiConsultMVC.Models.QuestionModel>
@{
    ViewBag.Title = "similarQuestions";
    if (Session["UserId"] != null)
    {
        Layout = "~/Views/Shared/_PatientMasterLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_AskmiraiMasterLayout.cshtml";
    }
}
@using (Html.BeginForm())
{
    string userType = "";
    if (Session["UserType"] != null)
    {
        if (Convert.ToInt32(Session["UserType"]) == Convert.ToInt32(UserType.Doctor))
        {
            userType = "Doctor";
        }
        else if (Convert.ToInt32(Session["UserType"]) == Convert.ToInt32(UserType.Patient))
        {
            userType = "Patient";
        }
        else if (Convert.ToInt32(Session["UserType"]) == Convert.ToInt32(UserType.SuperAdmin))
        {
            userType = "SuperAdmin";
        }

    }
    else
    {
        userType = "NotLoggedIn";
    }
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    {
        <div class="custom-central-div" style="margin-top:7%">
            <div class="row-fluid">
                <div>
                    <div class='row-fluid span7'>
                        <textarea cols="50" id="QuestionText" name="QuestionText" rows="2" onkeyup="Count(this)" maxlength="200" onkeypress="return isEnterPress(event, this);" class="input-block-level txtQuestion_maxwidth custom-green-container">@ViewBag.Question</textarea>
                    </div>
                    <div class="row-fluid">
                        <div class="span3">
                            @if (ViewBag.Count != null)
                            {
                                <label id="count" class="control-label count_align" style="text-align: left; float: left; padding-top: 13px;">@ViewBag.Count</label>
                            }
                            else
                            {
                                <label id="count" class="control-label count_align" style="text-align: left; float: left; padding-top: 13px;">0/200</label>
                            }
                        </div>
                    </div>
                    <div class='row-fluid similarquestions_title_margin'>

                        @if (Session["UserId"] == null && Model != null && Model.ToList().Count != 0)
                        {
                            <div class="span10 similarquestions_loginlink">
                                <a href="/login" class="divredirectlogin">Not Satisfied with below Answers? <strong>Send your Question to the Mirai Consult&#8482; panel of doctors</strong> </a>
                            </div>
                        }
                        else if (Session["UserId"] == null && (Model == null || Model.ToList().Count == 0))
                        {
                            <div class="span10 similarquestions_loginlink">
                                <a href="/login" class="divredirectlogin">Send your Question to the Mirai Consult&#8482; panel of doctors</a>
                            </div>
                        }
                    </div>
                    <div class='row-fluid'>
                        <div class="span12">
                            <label class="finddoc-title">Relevant answers</label>
                        </div>
                    </div>
                    <div class="margin_bottom">
                        @if (Model != null && (Model.ToList().Count != 0))
                        {
                            for (int i = 0; i < Model.ToList().Count; i++)
                            {
                                <div class='row-fluid'>
                                    <div class='span12 custom-green-container' style="display:table">
                                        <a style="display:table-row" href='/answers/@Model.ToList()[i].QuestionTextSeo' onclick="googleAnalytics('@Model.ToList()[i].QuestionText');">
                                            <div class='question_text custom-middle'>@Html.Raw(Model.ToList()[i].QuestionText) </div>
                                        </a>
                                    </div>
                                </div>
                                <div class='row-fluid'>
                                    <div id="feedDocImage_SQ" class='span1'>
                                        <div class='feedDocImage img'>
                                            @if ((Model.ToList()[i].DocImg) != "" && (Model.ToList()[i].DocImg) != null)
                                            {
                                                <img src='@Model.ToList()[i].DocImg' />
                                            }
                                            else
                                            {
                                                <img src='../Content/image/img-na.png' />
                                            }
                                        </div>
                                    </div>
                                    <div class='span6 middle-size-padding'>
                                        <div class='ans_time_detail'><a class='ans_time_detail' target="_blank" href="../doctor/@Model.ToList()[i].name_seo">Dr. @Model.ToList()[i].answerreplyedby </a></div>
                                        <div class='title_text'>
                                            @Model.ToList()[i].Title
                                        </div>
                                    </div>

                                    @if (Convert.ToBoolean(Model.ToList()[i].isdocconnectuser))
                                    {
                                        <div class="span3  pull-right hidden-phone">
                                            <a class='btn book_appt_button' href='@Convert.ToString(ConfigurationSettings.AppSettings["DocConnectApptUrl"])@MiraiConsultMVC.Utilities.Encrypt(Convert.ToString(Model.ToList()[i].UserId))&frmaskmirai=1' target='_blank' onclick="bookaptclicked('@Utilities.Encrypt(Convert.ToString(Model.ToList()[i].UserId))','@userType')">Book Appointment </a>
                                            <br />
                                            <br />
                                        </div>
                                    }
                                    @if (Convert.ToBoolean(Model.ToList()[i].isdocconnectuser)==false)
                                    {
                                        <div class="span3  pull-right hidden-phone">
                                            <a class='btn book_appt_button' data-toggle='modal' data-target='#myModal' data-backdrop='static' data-keyboard='false' onclick="bookaptclicked('@Utilities.Encrypt(Convert.ToString(Model.ToList()[i].UserId))','@userType');">Book Appointment </a>
                                            <br />
                                            <br />
                                        </div>
                                    }
                                    <div class='span11 middle-size-padding'>
                                        @if (!string.IsNullOrEmpty(Model.ToList()[i].answers[0].AnswerImage))
                                        {
                                            <div class='span5 '>
                                                <p class='ans_text'>@Html.Raw(Model.ToList()[i].answers[0].AnswerText) </p>
                                            </div>
                                            <div class='span3 offset1' id="feedAnsImage_SQ">
                                                <div class='feedAnsImage img'>
                                                    <img src="../feed/answerPhotos/@Model.ToList()[i].answers[0].AnswerImage">
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class='span11'>
                                                <p class='ans_text'>@Html.Raw(@Model.ToList()[i].answers[0].AnswerText)</p>
                                            </div>
                                        }
                                    </div>
                                </div>
                                if (Convert.ToBoolean(Model.ToList()[i].isdocconnectuser))
                                {
                                    <div class="span3 offset1 pull-left visible-phone">
                                        <a class='btn book_appt_button' href='@Convert.ToString(ConfigurationSettings.AppSettings["DocConnectApptUrl"])@MiraiConsultMVC.Utilities.Encrypt(Convert.ToString(Model.ToList()[i].UserId))&frmaskmirai=1' target='_blank' onclick='bookaptclicked( "@Utilities.Encrypt(Convert.ToString(Convert.ToString(Model.ToList()[i].UserId)))","@userType ")'>Book Appointment </a>
                                    </div>
                                    <br />
                                }
                                if (Convert.ToBoolean(Model.ToList()[i].isdocconnectuser)==false)
                                {
                                    var href = (Convert.ToString(ConfigurationSettings.AppSettings["DocConnectApptUrl"]) + MiraiConsultMVC.Utilities.Encrypt(Convert.ToString(Model.ToList()[i].UserId)) + "&frmaskmirai=1").Trim();
                                    <div class="span3 offset1 pull-left visible-phone">
                                        <a class='btn book_appt_button' data-toggle='modal' data-target='#myModal' data-backdrop='static' data-keyboard='false' onclick="bookaptclicked('@MiraiConsultMVC.Utilities.Encrypt(Convert.ToString(Model.ToList()[i].UserId))');"> Book Appointment </a>
                                    </div>
                                    <br />
                                }
                            }
                        }
                        else
                        {
                            <span>No records found</span>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="modal hide" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header center_align">
                        <h4 class="popup-title">
                            Book Appointment
                        </h4>
                    </div>
                    <div class="modal-body">
                        <p class="answer-title doc-detail-word-break center_align">To book an appointment call on</p>
                        <p class="answer-title doc-detail-word-break center_align margin-null">07666 252 444</p>
                    </div>
                    <div class="modal-footer center_align">
                        <button type="button" class="btn thanx cust-red" style="padding:4px 30px;" data-dismiss="modal"><b>OK</b></button>
                    </div>
                </div>
            </div>
         </div>
        <script type="text/javascript" src="../Content/js/utility.js"></script>
        <script type="text/javascript">
            $(document).ready(function () {
                $("#QuestionText").attr('maxlength', '200');
                var MaxLength = 200;
                $('#QuestionText').keypress(function (e) {
                    var text = $(this).val();
                    if ($(this).val().length > MaxLength) {
                        $(this).val(text.substr(0, (MaxLength)));
                    }
                });
            });
            function googleAnalytics(QuestionText) {

                var userType = '';
                @if (Session["UserType"] != null)
                {
                    if (Convert.ToInt32(Session["UserType"]) == Convert.ToInt32(UserType.Doctor)){
                    @:userType = 'Doctor';
                                }
                    else if (Convert.ToInt32(Session["UserType"]) == Convert.ToInt32(UserType.Patient)){
                    @:userType = 'Patient';
                                }
                    else if (Convert.ToInt32(Session["UserType"]) == Convert.ToInt32(UserType.SuperAdmin)){
                    @:userType = 'SuperAdmin';
                    }
                
                }
                else
                {
                    @:userType = 'NotLoggedIn';
                }
                ga('send', 'event', userType, 'Click on similar Questions', QuestionText);
            }
            $('#QuestionText').bind('input propertychange', function () {
                if ($(this).val().length <= 200) {
                    document.getElementById('count').innerHTML = $(this).val().length + "/200";
                }
            });
                function isEnterPress(evt, x) {
                    var charCode = (evt.which) ? evt.which : event.keyCode
                    if (charCode == 13) {
                        var session = '@Session["UserType"]';
                        window.location.href = "/similar-Questions/" + x.value;
                        return false;
                    }
                    return true;
                }
                $(function () {
                    $(".navigation li.active").removeClass("active");
                    $('#liSimilarQuestions').addClass("active");
                });
                function Count(x) {
                    if (x.value.length <= 200) {
                        document.getElementById('count').innerHTML = x.value.length + "/200";
                    }
                }
                function bookaptclicked(docid) {
                    $.ajax({
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/json',
                        data: '{"userid":' + docid + '}',
                        url: "../../Services/UserService.svc/IncrementAppointmentHitCnt",
                        success: function (response) {
                            response = JSON.parse(response);
                            console.log(response);
                        },
                        error: function (e) {

                        }
                    });
                }
                function isEnterPress(evt, x) {
                    var charCode = (evt.which) ? evt.which : event.keyCode
                    if (charCode == 13) {
                        var session = '@Session["UserType"]';
                        if (session != null && session == 2)
                            window.location.href = "../Patients/AskDoctor?question=" + x.value;
                        else
                            window.location.href = "../similar-questions?question=" + x.value;
                        return false;
                    }
                    return true;
                }
                function bookaptclicked(docid,userType) {
                    ga('send', 'event', userType, 'Book Appointment ', '');
                    $.ajax({
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/json',
                        data: '{"userid":\"' + docid + '"\}',
                        url: "../../Services/UserService.svc/IncrementAppointmentHitCnt",
                        success: function (response) {
                            response = JSON.parse(response);
                        },
                        error: function (e) {

                        }
                    });
                }
        </script>
    }
}

