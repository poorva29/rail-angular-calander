@model MiraiConsultMVC.Models.ModelUser
@{
    Layout = "~/Views/Shared/_AskmiraiMasterLayout.cshtml";
}

<script src="~/Scripts/bootstrap-datepicker.js"></script>
<script src="~/Scripts/dateofbirthvalidation.js"></script>
<script type="text/javascript" src="../Scripts/utility.js"></script>

@Scripts.Render("~/bundles/jqueryval")
@using (Html.BeginForm(new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    {
        <div class="main row-fluid">
            <div class="span12 main-outter-padding">
                <div class="row-fluid">
                    <div class="span12 cust-header-name-text">
                        <h5 class="title cust-header-main-text-title">Sign Up For Patient Account</h5>
                    </div>
                </div>
                @if (ViewBag.message != null && ViewBag.message == "Account has been created successfully and you will receive verification email shortly. Please check spam/junk incase you don't find an email in your inbox.")
                {

                    <div class="wrapper-bordered alert alert-success" id="SuccessMessagediv">
                        <div class="row-fluid">
                            <div class="span12">
                                <label id="lblSuccessMessage" class="success_message_color" style="font-size:10pt">@ViewBag.message</label>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div id="controlcontainer" class="wrapper-bordered cust-font-style">
                        <div class="">
                            <div class="row-fluid">
                                <div class="span12 cust-header-name-text">
                                    <h5 class="title cust-header-name-text cust-space-below">Personal Details</h5>
                                </div>
                            </div>

                            @if (ViewBag.message != null && ViewBag.message == "This email is not available. Please select a different email.")
                            {
                                <div class="wrapper-bordered">
                                    <div class="row-fluid">
                                        <div class="span12 alert-error alert" id="errorMessageDiv">
                                            <label id="lblErrorMessage" class="error_message_color" style="font-size:10pt">@ViewBag.message</label>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span12">
                                    <div class="span6">
                                        <div class="span4">
                                            <label class="required cust-font-style ">First Name:</label>
                                        </div>
                                        <div class="span8">
                                            @Html.TextBoxFor(m => m.FirstName, new { @class = "cust-no-border cust-lightgreen input-block-level contact_margin", placeholder = "First Name" })<br />
                                            @Html.ValidationMessageFor(m => m.FirstName, string.Empty, new { @class = "validation-summary-errors" })
                                        </div>
                                    </div>
                                    <div class="span6">
                                        <div class="span4">
                                            <label class=" required cust-font-style">Last Name:</label>
                                        </div>
                                        <div class="span8">
                                            @Html.TextBoxFor(m => m.LastName, new { @class = "input-block-level cust-lightgreen cust-gray contact_margin", placeholder = "Last Name" })<br />
                                            @Html.ValidationMessageFor(m => m.LastName, string.Empty, new { @class = "validation-summary-errors" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span12">
                                    <div class="span6">
                                        <div class="span4">
                                            <label class="cust-font-style">Date of Birth:</label>
                                        </div>
                                        <div class="span8">
                                            <div class="input-append date" id="dob" data-date-format="dd/mm/yyyy" data-date-start-view="decade"
                                                 data-date-enddate="new Date()" style="width: 100%">
                                                @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "input-without-right-curve cust-lightgreen cust-gray contact_margin", @style = "margin-top:0px;width: 85%;", @placeholder = "Date Of Birth", @id = "txtDob" })
                                                <span class="add-on add-on-green  icon-with-right-curve"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span6 ">
                                        <div class="span4">
                                            <label class="cust-font-style">Gender:</label>
                                        </div>
                                        <div class="span8">
                                            <label class="radio inline cust-font-style">
                                                @Html.RadioButton("Gender", "0", true, new { @class = "cust-font-style" }) Male
                                            </label>
                                            <label class="radio inline gendermargin cust-font-style">
                                                @Html.RadioButton("Gender", "1", false, new { @class = "cust-font-style" }) Female
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span12">
                                    <div class="span6">
                                        <div class="span4">
                                            <label class="cust-font-style">Height (in cm):</label>
                                        </div>
                                        <div class="span8">
                                            @Html.TextBoxFor(m => m.Height, new { @Class = "input-block-level cust-lightgreen cust-lightgreen contact_margin", placeholder = "Height in cm", @Value = (Model.Height == 0) ? "" : Model.Height.ToString(), @onkeypress = "return isNumber(event,5,this);" })<br />
                                            @*@Html.ValidationMessageFor(m => m.Height, string.Empty, new { @class = "validation-summary-errors" })*@
                                        </div>
                                    </div>
                                    <div class="span6">
                                        <div class="span4">
                                            <label class="cust-font-style">Weight (in kg):</label>
                                        </div>
                                        <div class="span8">
                                            @Html.TextBoxFor(m => m.Weight, new { @Class = "input-block-level cust-lightgreen cust-gray contact_margin", placeholder = "Weight in kg", @Value = (Model.Weight == 0) ? "" : Model.Weight.ToString(), @onkeypress = "return isDecimalNumber(event,3,this);" })<br />
                                            @*// @Html.ValidationMessageFor(m => m.Weight, string.Empty, new { @class = "validation-summary-errors" })*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid">
                                <div class="span12 cust-header-name-text">
                                    <h5 class="title cust-header-name-text cust-space-below">Contact Details</h5>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span12">
                                    <div class="span2">
                                        <label class="cust-font-style">Address:</label>
                                    </div>
                                    <div class="span10 cust-margin-span10">
                                        @Html.TextAreaFor(m => m.Address, new { @class = "input-block-level cust-lightgreen cust-gray contact_margin", placeholder = "Address", rows = "1", columns = "20" })
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span12">
                                    <div class="span6">
                                        <div class="span4">
                                            <label class="cust-font-style">Country:</label>
                                        </div>
                                        <div class="span8">
                                            @if (Model.Countries != null)
                                            {
                                                ViewBag.countries = Model.Countries;
                                                @Html.DropDownListFor(m => Model.CountryId, new SelectList(ViewBag.countries, "Value", "Text", Model.CountryId), "--Select Country--", new { @class = "input-block-level cust-lightgreen cust-gray drop-arrows contact_margin", id = "ddlCountry", onchange = "getStatebyCountry(this.value)" })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(m => Model.CountryId, new SelectList(string.Empty), "--Select Country--", new { @class = "input-block-level cust-lightgreen cust-gray drop-arrows contact_margin" })
                                            }
                                        </div>
                                    </div>
                                    <div class="span6">
                                        <div class="span4">
                                            <label class="cust-font-style">State:</label>
                                        </div>
                                        <div class="span8">
                                            @if (Model.States != null)
                                            {
                                                ViewBag.states = Model.States;
                                                @Html.DropDownListFor(m => Model.StateId, new SelectList(ViewBag.states, "Value", "Text", Model.StateId), "--Select State--", new { @class = "input-block-level cust-lightgreen cust-lightgreen drop-arrows contact_margin", id = "ddlState", onchange = "getCitybyState(this.value)" })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(m => Model.StateId, new SelectList(string.Empty), "--Select State--", new { @class = "input-block-level cust-lightgreen cust-lightgreen drop-arrows contact_margin", id = "ddlState", onchange = "getCitybyState(this.value)" })
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span6">
                                    <div class="span4">
                                        <label class="cust-font-style">City:</label>
                                    </div>
                                    <div class="span8">
                                        @if (Model.Cities != null)
                                        {
                                            ViewBag.cities = Model.Cities;
                                            @Html.DropDownListFor(m => Model.CityId, new SelectList(ViewBag.cities, "Value", "Text", Model.CityId), "--Select City--", new { @class = "input-block-level cust-lightgreen cust-gray drop-arrows contact_margin", id = "ddlCity", onchange = "getLocationbyCity(this.value)" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(m => Model.CityId, new SelectList(string.Empty), "--Select City--", new { @class = "input-block-level cust-lightgreen cust-gray drop-arrows contact_margin", id = "ddlCity", onchange = "getLocationbyCity(this.value)" })
                                        }
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="span4">
                                        <label class="cust-font-style">Location:</label>
                                    </div>
                                    <div class="span8">
                                        @if (Model.Locations != null)
                                        {
                                            ViewBag.locations = Model.Locations;
                                            @Html.DropDownListFor(m => Model.LocationId, new SelectList(ViewBag.locations, "Value", "Text", Model.LocationId), "--Select Location--", new { @class = "input-block-level cust-lightgreen cust-lightgreen drop-arrows contact_margin", id = "ddlLocation" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(m => Model.LocationId, new SelectList(string.Empty), "--Select Location--", new { @class = "input-block-level cust-lightgreen cust-lightgreen drop-arrows contact_margin", id = "ddlLocation" })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row">
                                <div class="span6">
                                    <div class="span4">
                                        <label class="cust-font-style">Pin Code:</label>
                                    </div>
                                    <div class="span8">
                                        @Html.TextBoxFor(m => m.Pincode, new { @Class = "input-block-level cust-lightgreen cust-lightgreen contact_margin", placeholder = "Pin Code", @Value = (Model.Pincode == 0) ? "" : Model.Pincode.ToString(), @onkeypress = "return isNumber(event,6,this);" })<br />
                                        @Html.ValidationMessageFor(m => m.Pincode, string.Empty, new { @class = "validation-summary-errors" })
                                    </div>
                                </div>
                                <div class="span6">
                                    <div class="span4">
                                        <label class="cust-font-style">Mobile No:</label>
                                    </div>
                                    <div class="span8">
                                        @Html.TextBoxFor(m => m.MobileNo, new { @Class = "input-block-level cust-lightgreen cust-gray contact_margin", placeholder = "Mobile No", @onkeypress = "return isNumber(event,10,this);" })<br />
                                        @Html.ValidationMessageFor(m => m.MobileNo, string.Empty, new { @class = "validation-summary-errors" })
                                    </div>
                                </div>
                                <div class="row-fluid">
                                    <div class="span12 cust-header-name-text">
                                        <h5 class="title cust-header-name-text cust-space-below">Account Details</h5>
                                    </div>
                                </div>
                                <div class="row-fluid cust-padding-bw-row">
                                    <div class="span6">
                                        <div class="span4">
                                            <label class="required cust-font-style">Email:</label>
                                        </div>
                                        <div class="span8">
                                            @Html.TextBoxFor(m => m.Email, new { @Class = "input-block-level cust-lightgreen cust-gray contact_margin", placeholder = "Email" })<br />
                                            @Html.ValidationMessageFor(m => m.Email, string.Empty, new { @class = "validation-summary-errors" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row-fluid cust-padding-bw-row">
                                    <div class="span6">
                                        <div class="span4">
                                            <label class="required cust-font-style">Password:</label>
                                        </div>
                                        <div class="span8">
                                            @Html.PasswordFor(m => m.Password, new { @maxlength = "30", @Class = "input-block-level cust-lightgreen cust-gray contact_margin", placeholder = "Password" })<br />
                                            @Html.ValidationMessageFor(m => m.Password, string.Empty, new { @class = "validation-summary-errors" })
                                        </div>
                                    </div>
                                    <div class="span6">
                                        <div class="span4">
                                            <label class="required cust-font-style">Confirm Password:</label>
                                        </div>
                                        <div class="span8">
                                            @Html.PasswordFor(x => x.ConfirmPassword, new { @maxlength = "30", @id = "ConfirmPassword", @type = "password", @class = "input-block-level cust-lightgreen input-block-level contact_margin", @placeholder = "Confirm Password" })<br />
                                            @Html.ValidationMessageFor(m => m.ConfirmPassword, string.Empty, new { @class = "validation-summary-errors" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid cust-padding-bw-row text-center">
                                <div class="span12">
                                    <input type="submit" name="btnCreatePatientAccount" value="Create Account" onclick="" id="btnCreatePatientAccount" class="btn cust-button-radius cust-skyblue cust-uppercase cust-space-around cust-medium-button cust-font-style" />
                                    <input type="reset" name="btnClear" value="Clear" id="btnClear" onclick="window.location.href = '/User/PatientSignUp'" class="btn cust-button-radius cust-uppercase cust-red cust-space-around cust-medium-button cust-font-style" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
}
<script type="text/javascript">
    function isNumber(evt, num, txt) {
        evt = (evt) ? evt : window.event;
        var len = $(txt).val().length;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if ((charCode > 31 && (charCode < 48 || charCode > 57)) || len >= num) {
            return false;
        }
        return true;
    }

    function isDecimalNumber(evt, num, txt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        var len = $(txt).val().length;
        if ((charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) || len >= num) {
            return false;
        }
        return true;
    }
    $("#txtDob").focusout(function () {
        var cntrl = $(this);
        if (cntrl.val().length > 0)
            isValidDateofBirth(cntrl);
    })
    $(".input-block-level").keyup(function () {
        $("form").valid();
    });
    $(function () {
        $('#dob').datepicker();
    });
    function getStatebyCountry(countryId) {
        $.ajax({
            type: "GET",
            url: 'poupulateStateByCountry' + '?countryId=' + countryId,
            datatype: "JSON",
            contentType: "application/json; charset=utf-8",
            success: function (returndata) {
                $("#ddlState").empty();
                $("#ddlCity").empty();
                $("#ddlLocation").empty();
                for (var i = 0; i < returndata.length; i++) {
                    $("#ddlState").append($('<option>').text(returndata[i].name).attr('value', returndata[i].stateid));
                };
            }
        });
    }
    function getCitybyState(stateId) {
        $.ajax({
            type: "GET",
            url: 'poupulateCityByState' + '?stateId=' + stateId,
            datatype: "JSON",
            contentType: "application/json; charset=utf-8",
            success: function (returndata) {
                $("#ddlCity").empty();
                $("#ddlLocation").empty();
                for (var i = 0; i < returndata.length; i++) {
                    $("#ddlCity").append($('<option>').text(returndata[i].name).attr('value', returndata[i].cityid));
                };
            }
        });
    }
    function getLocationbyCity(cityId) {
        $.ajax({
            type: "GET",
            url: 'poupulateLocationByCity' + '?cityId=' + cityId,
            datatype: "JSON",
            contentType: "application/json; charset=utf-8",
            success: function (returndata) {
                $("#ddlLocation").empty();
                for (var i = 0; i < returndata.length; i++) {
                    $("#ddlLocation").append($('<option>').text(returndata[i].name).attr('value', returndata[i].locationid));
                };
            }
        });
    }
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-48132984-2', 'askmirai.com');
    ga('send', 'pageview');
</script>
