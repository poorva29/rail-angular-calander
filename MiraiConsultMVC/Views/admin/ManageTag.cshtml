@{
    ViewBag.Title = "ManageTag";
    Layout = "~/Views/Shared/_PatientMasterLayout.cshtml";
}
<link href="../Content/tokenfield-typeahead.css" rel="stylesheet" />
<link href="../Content/bootstrap-tokenfield.css" rel="stylesheet" />
<link href="../Content/less/tokenfield-typeahead.less"></link>
<link href="../Content/less/bootstrap-tokenfield.less"></link>
<script type="text/javascript" src="../Scripts/bootstrap-tokenfield.js"></script>
<div class="row-fluid">
    <div class="span12 main-outter-padding">
        <div class="row-fluid">
            <div class="span12 finddoc-title">
                Manage Tags
            </div>
        </div>
        <div class="content_border find-Doc-gbColor divmargin_bottom" style="padding-left:20px;">
            <div class="row-fluid">
                <div class="row-fluid">
                    <div class="span6">
                        <div class="control-group">
                            <label class="control-label">Add New Tag:</label>
                            <div class="controls">
                                <input type="text" class="input-block-level max-width min-width-tag" id="txtAddNewTag" maxlength="50" onfocus="removeFilter()" />
                            </div>
                        </div>
                    </div>
                    <div class="span6">
                        <div class="control-group">
                            <label class="control-label ">Search Tag:</label>
                            <div class="controls">
                                <input type="text" class="input-block-level max-width min-width-tag" maxlength="50" id="txtSearchTag" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="span12">
                        <div class="control-group">
                            <label class="control-label">Added Tags:</label>
                            <div class="controls">
                                <input type="text" class="form-control" id="tokenfield-typeahead" value="" readonly />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var tags = '';
    var UpdateTags = false;
    $(function () {
        $(".navigation li.active").removeClass("active");
        $('#liManageTags').addClass("active");
        getAllTags();
    });

    function getAllTags() {
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: '../../Services/UserService.svc/getAllTags',
            success: function (response) {
                response = JSON.parse(response);
                for (cnt = 0; cnt < response.length; cnt++)
                    tags = tags + response[cnt]["tagname"] + ',';
                $('#tokenfield-typeahead').val(tags);
                $('#tokenfield-typeahead').tokenfield({
                    typeahead: {
                        name: 'tags',
                        local: [],
                    }
                });
                $("#tokenfield-typeahead-tokenfield").attr("readonly", true);
            },
            error: function (data) {
                if (data.responseText.indexOf('Authentication failed') > -1) {
                    location.reload();
                }
            }
        });
    }

    $('#tokenfield-typeahead').on('removeToken', function (e) {
        if (confirm("Are you sure you want to remove this tag?") == true) {
            var searchVal = $("#txtSearchTag").val();
            $.ajax({
                type: 'GET',
                dataType: 'json',
                url: '../../Services/UserService.svc/removeTags?tag=' + e.token.value,
                success: function (response) {
                    tags = tags.replace(e.token.value, '');
                    alert("Tag removed successfully");
                    IEReload();
                    if (searchVal.length > 0) {
                        window.location.reload();
                    }
                },
                error: function (data) {
                    if (data.responseText.indexOf('Authentication failed') > -1) {
                        location.reload();
                    }
                }
            });
        }
        else {
            $('#tokenfield-typeahead').tokenfield('createToken', e.token.value);
        }
    })
    function removeFilter() {
        var agent = navigator.userAgent;
        var reg1 = /MSIE\s?(\d+)(?:\.(\d+))?/i;
        var reg2 = /Trident\/7\./;
        if (agent.match(reg1) || agent.match(reg2)) {
            $("#txtSearchTag").value = "";
            getAllTags();
        }
        else {
            if (UpdateTags) {
                $('#tokenfield-typeahead').tokenfield('setTokens', tags);
                UpdateTags = false;
            }
        }
    }

    function IEReload() {
        var agent = navigator.userAgent;
        var reg1 = /MSIE\s?(\d+)(?:\.(\d+))?/i;
        var reg2 = /Trident\/7\./;
        if (agent.match(reg1) || agent.match(reg2)) {
            location.reload();
        }
    }

    $('#txtAddNewTag').on("keypress", function (e) {
        if (e.keyCode == 13 && $('#txtAddNewTag').val().trim().length != 0) {
            if ($('#txtAddNewTag').val().indexOf(',') == -1) {
                var newTag = $('#txtAddNewTag').val();
                var tagsArray = tags.split(',');
                for (var i = 0; i < tagsArray.length; i++) {
                    if (tagsArray[i].toLowerCase() == newTag.toLowerCase()) {
                        alert("Tag already exist");
                        return;
                    }
                }
                $.ajax({
                    type: 'GET',
                    dataType: 'json',
                    url: '../../Services/UserService.svc/addNewTags?newTag=' + newTag + '&questionid=0',
                    success: function (response) {
                        $('#tokenfield-typeahead').tokenfield('createToken', newTag);
                        $('#txtAddNewTag').val('');
                        tags = tags + newTag + ',';
                        IEReload();
                    },
                    error: function (data) {
                        if (data.responseText.indexOf('Authentication failed') > -1) {
                            location.reload();
                        }
                    }
                });
                return false;
            }
            else {
                alert("You can't enter comma ")
            }
        }
    });
    $('#txtSearchTag').on("keypress", function (e) {
        if (e.keyCode == 13) {
            var filterTags = '';
            var searchText = $('#txtSearchTag').val();
            if (searchText != "") {
                UpdateTags = true;
            }
            else {
                UpdateTags = false;
            }
            var tagsArray = tags.split(',');
            for (var i = 0; i < tagsArray.length; i++) {
                if (tagsArray[i].toLowerCase().indexOf(searchText.toLowerCase()) != -1) {
                    filterTags = filterTags + tagsArray[i] + ',';
                }
            }
            $('#tokenfield-typeahead').tokenfield('setTokens', filterTags);
        }
    });
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-48132984-2', 'askmirai.com');
    ga('send', 'pageview');
</script>